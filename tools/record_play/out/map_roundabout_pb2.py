# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: map_roundabout.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import map_id_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='map_roundabout.proto',
  package='adu.common.hdmap',
  serialized_pb=_b('\n\x14map_roundabout.proto\x12\x10\x61\x64u.common.hdmap\x1a\x0cmap_id.proto\"\xb3\x01\n\nAccessLink\x12 \n\x02id\x18\x01 \x01(\x0b\x32\x14.adu.common.hdmap.Id\x12%\n\x07lane_id\x18\x02 \x03(\x0b\x32\x14.adu.common.hdmap.Id\x12/\n\x04type\x18\x03 \x01(\x0e\x32!.adu.common.hdmap.AccessLink.Type\"+\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08\x45NTRANCE\x10\x01\x12\x08\n\x04\x45XIT\x10\x02\"\x8a\x01\n\nRoundabout\x12 \n\x02id\x18\x01 \x01(\x0b\x32\x14.adu.common.hdmap.Id\x12\x30\n\nconnection\x18\x02 \x03(\x0b\x32\x1c.adu.common.hdmap.AccessLink\x12(\n\noverlap_id\x18\x04 \x03(\x0b\x32\x14.adu.common.hdmap.Id')
  ,
  dependencies=[map_id_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_ACCESSLINK_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='adu.common.hdmap.AccessLink.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTRANCE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXIT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=193,
  serialized_end=236,
)
_sym_db.RegisterEnumDescriptor(_ACCESSLINK_TYPE)


_ACCESSLINK = _descriptor.Descriptor(
  name='AccessLink',
  full_name='adu.common.hdmap.AccessLink',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='adu.common.hdmap.AccessLink.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lane_id', full_name='adu.common.hdmap.AccessLink.lane_id', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='adu.common.hdmap.AccessLink.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ACCESSLINK_TYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=236,
)


_ROUNDABOUT = _descriptor.Descriptor(
  name='Roundabout',
  full_name='adu.common.hdmap.Roundabout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='adu.common.hdmap.Roundabout.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connection', full_name='adu.common.hdmap.Roundabout.connection', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='overlap_id', full_name='adu.common.hdmap.Roundabout.overlap_id', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=377,
)

_ACCESSLINK.fields_by_name['id'].message_type = map_id_pb2._ID
_ACCESSLINK.fields_by_name['lane_id'].message_type = map_id_pb2._ID
_ACCESSLINK.fields_by_name['type'].enum_type = _ACCESSLINK_TYPE
_ACCESSLINK_TYPE.containing_type = _ACCESSLINK
_ROUNDABOUT.fields_by_name['id'].message_type = map_id_pb2._ID
_ROUNDABOUT.fields_by_name['connection'].message_type = _ACCESSLINK
_ROUNDABOUT.fields_by_name['overlap_id'].message_type = map_id_pb2._ID
DESCRIPTOR.message_types_by_name['AccessLink'] = _ACCESSLINK
DESCRIPTOR.message_types_by_name['Roundabout'] = _ROUNDABOUT

AccessLink = _reflection.GeneratedProtocolMessageType('AccessLink', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLINK,
  __module__ = 'map_roundabout_pb2'
  # @@protoc_insertion_point(class_scope:adu.common.hdmap.AccessLink)
  ))
_sym_db.RegisterMessage(AccessLink)

Roundabout = _reflection.GeneratedProtocolMessageType('Roundabout', (_message.Message,), dict(
  DESCRIPTOR = _ROUNDABOUT,
  __module__ = 'map_roundabout_pb2'
  # @@protoc_insertion_point(class_scope:adu.common.hdmap.Roundabout)
  ))
_sym_db.RegisterMessage(Roundabout)


# @@protoc_insertion_point(module_scope)
