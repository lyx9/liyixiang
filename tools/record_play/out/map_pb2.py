# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: map.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_geometry_pb2
import map_crosswalk_pb2
import map_junction_pb2
import map_lane_pb2
import map_overlap_pb2
import map_stop_sign_pb2
import map_signal_pb2
import map_yield_sign_pb2
import map_clear_area_pb2
import map_speed_bump_pb2
import map_parking_space_pb2
import map_road_pb2
import map_branch_lane_pb2
import map_roundabout_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='map.proto',
  package='adu.common.hdmap',
  serialized_pb=_b('\n\tmap.proto\x12\x10\x61\x64u.common.hdmap\x1a\x15\x63ommon_geometry.proto\x1a\x13map_crosswalk.proto\x1a\x12map_junction.proto\x1a\x0emap_lane.proto\x1a\x11map_overlap.proto\x1a\x13map_stop_sign.proto\x1a\x10map_signal.proto\x1a\x14map_yield_sign.proto\x1a\x14map_clear_area.proto\x1a\x14map_speed_bump.proto\x1a\x17map_parking_space.proto\x1a\x0emap_road.proto\x1a\x15map_branch_lane.proto\x1a\x14map_roundabout.proto\"\xd7\x01\n\nProjection\x12$\n\x06origin\x18\x01 \x01(\x0b\x32\x14.adu.common.PointLLH\x12/\n\x03utm\x18\x02 \x01(\x0b\x32 .adu.common.hdmap.Projection.UTMH\x00\x12/\n\x03ltm\x18\x03 \x01(\x0b\x32 .adu.common.hdmap.Projection.LTMH\x00\x1a\x19\n\x03UTM\x12\x12\n\x07zone_id\x18\x01 \x01(\x11:\x01\x30\x1a\x1e\n\x03LTM\x12\x17\n\x0cscale_factor\x18\x01 \x01(\x01:\x01\x31\x42\x06\n\x04type\"k\n\x06Header\x12\x0f\n\x07version\x18\x01 \x01(\x0c\x12\x0c\n\x04\x64\x61te\x18\x02 \x01(\x0c\x12\x30\n\nprojection\x18\x03 \x01(\x0b\x32\x1c.adu.common.hdmap.Projection\x12\x10\n\x08\x64istrict\x18\x04 \x01(\x0c\"\x88\x05\n\x03Map\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x18.adu.common.hdmap.Header\x12.\n\tcrosswalk\x18\x02 \x03(\x0b\x32\x1b.adu.common.hdmap.Crosswalk\x12,\n\x08junction\x18\x03 \x03(\x0b\x32\x1a.adu.common.hdmap.Junction\x12$\n\x04lane\x18\x04 \x03(\x0b\x32\x16.adu.common.hdmap.Lane\x12-\n\tstop_sign\x18\x05 \x03(\x0b\x32\x1a.adu.common.hdmap.StopSign\x12(\n\x06signal\x18\x06 \x03(\x0b\x32\x18.adu.common.hdmap.Signal\x12*\n\x05yield\x18\x07 \x03(\x0b\x32\x1b.adu.common.hdmap.YieldSign\x12*\n\x07overlap\x18\x08 \x03(\x0b\x32\x19.adu.common.hdmap.Overlap\x12/\n\nclear_area\x18\t \x03(\x0b\x32\x1b.adu.common.hdmap.ClearArea\x12/\n\nspeed_bump\x18\n \x03(\x0b\x32\x1b.adu.common.hdmap.SpeedBump\x12\x35\n\rparking_space\x18\x0b \x03(\x0b\x32\x1e.adu.common.hdmap.ParkingSpace\x12$\n\x04road\x18\x0c \x03(\x0b\x32\x16.adu.common.hdmap.Road\x12\x31\n\x0b\x62ranch_lane\x18\r \x03(\x0b\x32\x1c.adu.common.hdmap.BranchLane\x12\x30\n\nroundabout\x18\x0e \x03(\x0b\x32\x1c.adu.common.hdmap.Roundabout')
  ,
  dependencies=[common_geometry_pb2.DESCRIPTOR,map_crosswalk_pb2.DESCRIPTOR,map_junction_pb2.DESCRIPTOR,map_lane_pb2.DESCRIPTOR,map_overlap_pb2.DESCRIPTOR,map_stop_sign_pb2.DESCRIPTOR,map_signal_pb2.DESCRIPTOR,map_yield_sign_pb2.DESCRIPTOR,map_clear_area_pb2.DESCRIPTOR,map_speed_bump_pb2.DESCRIPTOR,map_parking_space_pb2.DESCRIPTOR,map_road_pb2.DESCRIPTOR,map_branch_lane_pb2.DESCRIPTOR,map_roundabout_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PROJECTION_UTM = _descriptor.Descriptor(
  name='UTM',
  full_name='adu.common.hdmap.Projection.UTM',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zone_id', full_name='adu.common.hdmap.Projection.UTM.zone_id', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=472,
  serialized_end=497,
)

_PROJECTION_LTM = _descriptor.Descriptor(
  name='LTM',
  full_name='adu.common.hdmap.Projection.LTM',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='adu.common.hdmap.Projection.LTM.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=499,
  serialized_end=529,
)

_PROJECTION = _descriptor.Descriptor(
  name='Projection',
  full_name='adu.common.hdmap.Projection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='origin', full_name='adu.common.hdmap.Projection.origin', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='utm', full_name='adu.common.hdmap.Projection.utm', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ltm', full_name='adu.common.hdmap.Projection.ltm', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PROJECTION_UTM, _PROJECTION_LTM, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='adu.common.hdmap.Projection.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=322,
  serialized_end=537,
)


_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='adu.common.hdmap.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='adu.common.hdmap.Header.version', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='date', full_name='adu.common.hdmap.Header.date', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='projection', full_name='adu.common.hdmap.Header.projection', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='district', full_name='adu.common.hdmap.Header.district', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=539,
  serialized_end=646,
)


_MAP = _descriptor.Descriptor(
  name='Map',
  full_name='adu.common.hdmap.Map',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='adu.common.hdmap.Map.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crosswalk', full_name='adu.common.hdmap.Map.crosswalk', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='junction', full_name='adu.common.hdmap.Map.junction', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lane', full_name='adu.common.hdmap.Map.lane', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_sign', full_name='adu.common.hdmap.Map.stop_sign', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signal', full_name='adu.common.hdmap.Map.signal', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='yield', full_name='adu.common.hdmap.Map.yield', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='overlap', full_name='adu.common.hdmap.Map.overlap', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='clear_area', full_name='adu.common.hdmap.Map.clear_area', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed_bump', full_name='adu.common.hdmap.Map.speed_bump', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parking_space', full_name='adu.common.hdmap.Map.parking_space', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='road', full_name='adu.common.hdmap.Map.road', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='branch_lane', full_name='adu.common.hdmap.Map.branch_lane', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='roundabout', full_name='adu.common.hdmap.Map.roundabout', index=13,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=649,
  serialized_end=1297,
)

_PROJECTION_UTM.containing_type = _PROJECTION
_PROJECTION_LTM.containing_type = _PROJECTION
_PROJECTION.fields_by_name['origin'].message_type = common_geometry_pb2._POINTLLH
_PROJECTION.fields_by_name['utm'].message_type = _PROJECTION_UTM
_PROJECTION.fields_by_name['ltm'].message_type = _PROJECTION_LTM
_PROJECTION.oneofs_by_name['type'].fields.append(
  _PROJECTION.fields_by_name['utm'])
_PROJECTION.fields_by_name['utm'].containing_oneof = _PROJECTION.oneofs_by_name['type']
_PROJECTION.oneofs_by_name['type'].fields.append(
  _PROJECTION.fields_by_name['ltm'])
_PROJECTION.fields_by_name['ltm'].containing_oneof = _PROJECTION.oneofs_by_name['type']
_HEADER.fields_by_name['projection'].message_type = _PROJECTION
_MAP.fields_by_name['header'].message_type = _HEADER
_MAP.fields_by_name['crosswalk'].message_type = map_crosswalk_pb2._CROSSWALK
_MAP.fields_by_name['junction'].message_type = map_junction_pb2._JUNCTION
_MAP.fields_by_name['lane'].message_type = map_lane_pb2._LANE
_MAP.fields_by_name['stop_sign'].message_type = map_stop_sign_pb2._STOPSIGN
_MAP.fields_by_name['signal'].message_type = map_signal_pb2._SIGNAL
_MAP.fields_by_name['yield'].message_type = map_yield_sign_pb2._YIELDSIGN
_MAP.fields_by_name['overlap'].message_type = map_overlap_pb2._OVERLAP
_MAP.fields_by_name['clear_area'].message_type = map_clear_area_pb2._CLEARAREA
_MAP.fields_by_name['speed_bump'].message_type = map_speed_bump_pb2._SPEEDBUMP
_MAP.fields_by_name['parking_space'].message_type = map_parking_space_pb2._PARKINGSPACE
_MAP.fields_by_name['road'].message_type = map_road_pb2._ROAD
_MAP.fields_by_name['branch_lane'].message_type = map_branch_lane_pb2._BRANCHLANE
_MAP.fields_by_name['roundabout'].message_type = map_roundabout_pb2._ROUNDABOUT
DESCRIPTOR.message_types_by_name['Projection'] = _PROJECTION
DESCRIPTOR.message_types_by_name['Header'] = _HEADER
DESCRIPTOR.message_types_by_name['Map'] = _MAP

Projection = _reflection.GeneratedProtocolMessageType('Projection', (_message.Message,), dict(

  UTM = _reflection.GeneratedProtocolMessageType('UTM', (_message.Message,), dict(
    DESCRIPTOR = _PROJECTION_UTM,
    __module__ = 'map_pb2'
    # @@protoc_insertion_point(class_scope:adu.common.hdmap.Projection.UTM)
    ))
  ,

  LTM = _reflection.GeneratedProtocolMessageType('LTM', (_message.Message,), dict(
    DESCRIPTOR = _PROJECTION_LTM,
    __module__ = 'map_pb2'
    # @@protoc_insertion_point(class_scope:adu.common.hdmap.Projection.LTM)
    ))
  ,
  DESCRIPTOR = _PROJECTION,
  __module__ = 'map_pb2'
  # @@protoc_insertion_point(class_scope:adu.common.hdmap.Projection)
  ))
_sym_db.RegisterMessage(Projection)
_sym_db.RegisterMessage(Projection.UTM)
_sym_db.RegisterMessage(Projection.LTM)

Header = _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), dict(
  DESCRIPTOR = _HEADER,
  __module__ = 'map_pb2'
  # @@protoc_insertion_point(class_scope:adu.common.hdmap.Header)
  ))
_sym_db.RegisterMessage(Header)

Map = _reflection.GeneratedProtocolMessageType('Map', (_message.Message,), dict(
  DESCRIPTOR = _MAP,
  __module__ = 'map_pb2'
  # @@protoc_insertion_point(class_scope:adu.common.hdmap.Map)
  ))
_sym_db.RegisterMessage(Map)


# @@protoc_insertion_point(module_scope)
