# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simulation_condition.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_geometry_pb2
import decision_pb2
import routing_pb2
import traffic_light_detection_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='simulation_condition.proto',
  package='adu.simulation',
  serialized_pb=_b('\n\x1asimulation_condition.proto\x12\x0e\x61\x64u.simulation\x1a\x15\x63ommon_geometry.proto\x1a\x0e\x64\x65\x63ision.proto\x1a\rrouting.proto\x1a\x1dtraffic_light_detection.proto\"\x9f,\n\tCondition\x12=\n\x11logical_condition\x18\x01 \x01(\x0b\x32 .adu.simulation.LogicalConditionH\x00\x12\x39\n\x0fspeed_condition\x18\x02 \x01(\x0b\x32\x1e.adu.simulation.SpeedConditionH\x00\x12J\n\x18object_overlap_condition\x18\x03 \x01(\x0b\x32&.adu.simulation.ObjectOverlapConditionH\x00\x12G\n\x16\x61\x63\x63\x65leration_condition\x18\x04 \x01(\x0b\x32%.adu.simulation.AccelerationConditionH\x00\x12J\n\x18region_overlap_condition\x18\x05 \x01(\x0b\x32&.adu.simulation.RegionOverlapConditionH\x00\x12O\n\x1bregion_overlap_lw_condition\x18\x06 \x01(\x0b\x32(.adu.simulation.RegionOverlapLWConditionH\x00\x12>\n\x17run_red_light_condition\x18\x07 \x01(\x0b\x32\x1b.adu.simulation.RunRedLightH\x00\x12H\n\x17main_decision_condition\x18\x08 \x01(\x0b\x32%.adu.simulation.MainDecisionConditionH\x00\x12W\n\x1fline_segments_overlap_condition\x18\t \x01(\x0b\x32,.adu.simulation.LineSegmentsOverlapConditionH\x00\x12H\n\x17traffic_light_condition\x18\n \x01(\x0b\x32%.adu.simulation.TrafficLightConditionH\x00\x12P\n\x1cobject_next_to_adc_condition\x18\x0b \x01(\x0b\x32(.adu.simulation.ObjectNextToADCConditionH\x00\x12L\n\x19object_location_condition\x18\x0c \x01(\x0b\x32\'.adu.simulation.ObjectLocationConditionH\x00\x12L\n\x19object_decision_condition\x18\r \x01(\x0b\x32\'.adu.simulation.ObjectDecisionConditionH\x00\x12\x44\n\x15object_wave_condition\x18\x0e \x01(\x0b\x32#.adu.simulation.ObjectWaveConditionH\x00\x12=\n\x11routing_condition\x18\x0f \x01(\x0b\x32 .adu.simulation.RoutingConditionH\x00\x12Q\n\x1c\x61ngle_with_heading_condition\x18\x10 \x01(\x0b\x32).adu.simulation.AngleWithHeadingConditionH\x00\x12W\n\x1f\x63ustomized_empty_area_condition\x18\x11 \x01(\x0b\x32,.adu.simulation.CustomizedEmptyAreaConditionH\x00\x12\x43\n\x14retrograde_condition\x18\x12 \x01(\x0b\x32#.adu.simulation.RetrogradeConditionH\x00\x12?\n\x12planning_condition\x18\x13 \x01(\x0b\x32!.adu.simulation.PlanningConditionH\x00\x12\x42\n\x14\x63ross_line_condition\x18\x14 \x01(\x0b\x32\".adu.simulation.CrossLineConditionH\x00\x12\x44\n\x15parking_pos_condition\x18\x15 \x01(\x0b\x32#.adu.simulation.ParkingPosConditionH\x00\x12\x42\n\x14\x64rop_frame_condition\x18\x16 \x01(\x0b\x32\".adu.simulation.DropFrameConditionH\x00\x12M\n\x1aturn_speed_limit_condition\x18\x17 \x01(\x0b\x32\'.adu.simulation.TurnSpeedLimitConditionH\x00\x12\x44\n\x15\x63hange_lane_condition\x18\x18 \x01(\x0b\x32#.adu.simulation.ChangeLaneConditionH\x00\x12<\n\x11on_road_condition\x18\x19 \x01(\x0b\x32\x1f.adu.simulation.OnRoadConditionH\x00\x12\x42\n\x14turn_light_condition\x18\x1a \x01(\x0b\x32\".adu.simulation.TurnLightConditionH\x00\x12\x42\n\x14stop_limit_condition\x18\x1b \x01(\x0b\x32\".adu.simulation.StopLimitConditionH\x00\x12U\n\x1eplanning_topic_check_condition\x18\x1c \x01(\x0b\x32+.adu.simulation.PlanningTopicCheckConditionH\x00\x12\x62\n%prediction_line_shape_check_condition\x18\x1d \x01(\x0b\x32\x31.adu.simulation.PredictionLineShapeCheckConditionH\x00\x12\x46\n\x16pass_through_condition\x18\x1e \x01(\x0b\x32$.adu.simulation.PassThroughConditionH\x00\x12J\n\x18\x63rosswalk_stop_condition\x18\x1f \x01(\x0b\x32&.adu.simulation.CrosswalkStopConditionH\x00\x12T\n\x1djunction_decelerate_condition\x18  \x01(\x0b\x32+.adu.simulation.JunctionDecelerateConditionH\x00\x12>\n\x12\x61\x64\x63_wave_condition\x18! \x01(\x0b\x32 .adu.simulation.AdcWaveConditionH\x00\x12@\n\x13\x61\x64\x63_drift_condition\x18\" \x01(\x0b\x32!.adu.simulation.AdcDriftConditionH\x00\x12R\n\x1cplanning_curvature_condition\x18# \x01(\x0b\x32*.adu.simulation.PlanningCurvatureConditionH\x00\x12R\n\x1cplanning_collision_condition\x18$ \x01(\x0b\x32*.adu.simulation.PlanningCollisionConditionH\x00\x12N\n\x1aidentify_nolight_condition\x18% \x01(\x0b\x32(.adu.simulation.IdentifyNolightConditionH\x00\x12H\n\x17identify_slow_condition\x18& \x01(\x0b\x32%.adu.simulation.IdentifySlowConditionH\x00\x12N\n\x1aplanning_outside_condition\x18\' \x01(\x0b\x32(.adu.simulation.PlanningOutsideConditionH\x00\x12Q\n\x1c\x64rop_frame_monitor_condition\x18( \x01(\x0b\x32).adu.simulation.DropFrameMonitorConditionH\x00\x12M\n\x1a\x63hange_lane_fast_condition\x18) \x01(\x0b\x32\'.adu.simulation.ChangeLaneFastConditionH\x00\x12\x37\n\x0ejerk_condition\x18* \x01(\x0b\x32\x1d.adu.simulation.JerkConditionH\x00\x12\x35\n\ryaw_condition\x18+ \x01(\x0b\x32\x1c.adu.simulation.YawConditionH\x00\x12>\n\x12yaw_rate_condition\x18, \x01(\x0b\x32 .adu.simulation.YawRateConditionH\x00\x12\x39\n\x0fkappa_condition\x18- \x01(\x0b\x32\x1e.adu.simulation.KappaConditionH\x00\x12;\n\x10\x64kappa_condition\x18. \x01(\x0b\x32\x1f.adu.simulation.DkappaConditionH\x00\x12Q\n\x1c\x63hange_lane_double_condition\x18/ \x01(\x0b\x32).adu.simulation.ChangeLaneDoubleConditionH\x00\x12H\n\x17planning_core_condition\x18\x30 \x01(\x0b\x32%.adu.simulation.PlanningCoreConditionH\x00\x12H\n\x17planning_stop_condition\x18\x31 \x01(\x0b\x32%.adu.simulation.PlanningStopConditionH\x00\x12^\n#straight_change_line_time_condition\x18\x32 \x01(\x0b\x32/.adu.simulation.StraightChangeLineTimeConditionH\x00\x12M\n\x1a\x63hange_lane_stop_condition\x18\x33 \x01(\x0b\x32\'.adu.simulation.ChangeLaneStopConditionH\x00\x12J\n\x18planning_ahead_condition\x18\x34 \x01(\x0b\x32&.adu.simulation.PlanningAheadConditionH\x00\x12H\n\x17planning_slow_condition\x18\x35 \x01(\x0b\x32%.adu.simulation.PlanningSlowConditionH\x00\x12k\n*planning_change_lane_at_junction_condition\x18\x36 \x01(\x0b\x32\x35.adu.simulation.PlanningChangeLaneAtJunctionConditionH\x00\x12U\n\x1eplanning_custom_stop_condition\x18\x37 \x01(\x0b\x32+.adu.simulation.PlanningCustomStopConditionH\x00\x12W\n\x1f\x61uto_invalid_planning_condition\x18\x38 \x01(\x0b\x32,.adu.simulation.AutoInvalidPlanningConditionH\x00\x12\x46\n\x16paint_dragon_condition\x18\x39 \x01(\x0b\x32$.adu.simulation.PaintDragonConditionH\x00\x12n\n,planning_change_lane_on_solid_line_condition\x18: \x01(\x0b\x32\x36.adu.simulation.PlanningChangeLaneOnSolidLineConditionH\x00\x12l\n*planning_road_shoulder_collision_condition\x18; \x01(\x0b\x32\x36.adu.simulation.PlanningRoadShoulderCollisionConditionH\x00\x12K\n\x19turn_light_time_condition\x18< \x01(\x0b\x32&.adu.simulation.TurnLightTimeConditionH\x00\x12W\n\x1f\x61\x64\x63_central_deviation_condition\x18= \x01(\x0b\x32,.adu.simulation.AdcCentralDeviationConditionH\x00\x12\x46\n\x16identify_end_condition\x18> \x01(\x0b\x32$.adu.simulation.IdentifyEndConditionH\x00\x12Y\n planning_adc_collision_condition\x18? \x01(\x0b\x32-.adu.simulation.PlanningAdcCollisionConditionH\x00\x12M\n\x1a\x63ross_solid_line_condition\x18@ \x01(\x0b\x32\'.adu.simulation.CrossSolidLineConditionH\x00\x12O\n\x1b\x61\x64\x63_invalid_uturn_condition\x18\x41 \x01(\x0b\x32(.adu.simulation.AdcInvalidUturnConditionH\x00\x12S\n\x1d\x63\x61r_deviate_central_condition\x18\x42 \x01(\x0b\x32*.adu.simulation.CarDeviateCentralConditionH\x00\x12N\n\x1ajunction_connect_condition\x18\x43 \x01(\x0b\x32(.adu.simulation.JunctionConnectConditionH\x00\x12J\n\x18\x63ompare_rosbag_condition\x18\x44 \x01(\x0b\x32&.adu.simulation.CompareRosbagConditionH\x00\x12Q\n\x1c\x63hange_lane_normal_condition\x18\x45 \x01(\x0b\x32).adu.simulation.ChangeLaneNormalConditionH\x00\x12J\n\x18heading_offset_condition\x18\x46 \x01(\x0b\x32&.adu.simulation.HeadingOffsetConditionH\x00\x12K\n\x19unknown_on_road_condition\x18G \x01(\x0b\x32&.adu.simulation.UnknownOnRoadConditionH\x00\x12U\n\x1epressure_yellow_line_condition\x18H \x01(\x0b\x32+.adu.simulation.PressureYellowLineConditionH\x00\x12O\n\x1bplanning_dis_diff_condition\x18I \x01(\x0b\x32(.adu.simulation.PlanningDisDiffConditionH\x00\x42\x0b\n\tcondition\"\x91\x02\n\x11PlanningCondition\x12\x18\n\x10max_acceleration\x18\x01 \x01(\x01\x12\x18\n\x10min_acceleration\x18\x02 \x01(\x01\x12$\n\x1cmax_acceleration_change_rate\x18\x03 \x01(\x01\x12$\n\x1cmin_acceleration_change_rate\x18\x04 \x01(\x01\x12\x11\n\tcurvature\x18\x05 \x01(\x01\x12\x1d\n\x15\x63urvature_change_rate\x18\x06 \x01(\x01\x12$\n\x1cmax_centripetal_acceleration\x18\x07 \x01(\x01\x12$\n\x1cmin_centripetal_acceleration\x18\x08 \x01(\x01\"\xd5\x01\n\x10LogicalCondition\x12\x44\n\roperator_type\x18\x01 \x01(\x0e\x32-.adu.simulation.LogicalCondition.OperatorType\x12\x30\n\rsub_condition\x18\x02 \x03(\x0b\x32\x19.adu.simulation.Condition\"I\n\x0cOperatorType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03NOT\x10\x01\x12\x07\n\x03\x41ND\x10\x02\x12\x06\n\x02OR\x10\x03\x12\t\n\x05IMPLY\x10\x04\x12\x07\n\x03XOR\x10\x05\"\x81\x01\n\x0eSpeedCondition\x12\x13\n\x04name\x18\x01 \x01(\t:\x05speed\x12\x14\n\tmin_speed\x18\x02 \x01(\x01:\x01\x30\x12\x17\n\tmax_speed\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\"\xb3\x01\n\x15\x41\x63\x63\x65lerationCondition\x12\x1a\n\x04name\x18\x01 \x01(\t:\x0c\x61\x63\x63\x65leration\x12\x1f\n\x10min_acceleration\x18\x02 \x01(\x01:\x05-1000\x12\x1e\n\x10max_acceleration\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\x12\x10\n\x05speed\x18\x06 \x01(\x01:\x01\x31\"\x93\x01\n\rJerkCondition\x12\x12\n\x04name\x18\x01 \x01(\t:\x04jerk\x12\x17\n\x08min_jerk\x18\x02 \x01(\x01:\x05-1000\x12\x16\n\x08max_jerk\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\x12\x10\n\x05speed\x18\x06 \x01(\x01:\x01\x31\"\x8f\x01\n\x0cYawCondition\x12\x11\n\x04name\x18\x01 \x01(\t:\x03yaw\x12\x16\n\x07min_yaw\x18\x02 \x01(\x01:\x05-1000\x12\x15\n\x07max_yaw\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\x12\x10\n\x05speed\x18\x06 \x01(\x01:\x01\x31\"\xa1\x01\n\x10YawRateCondition\x12\x15\n\x04name\x18\x01 \x01(\t:\x07yawrate\x12\x1b\n\x0cmin_yaw_rate\x18\x02 \x01(\x01:\x05-1000\x12\x1a\n\x0cmax_yaw_rate\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\x12\x10\n\x05speed\x18\x06 \x01(\x01:\x01\x31\"\x97\x01\n\x0eKappaCondition\x12\x13\n\x04name\x18\x01 \x01(\t:\x05kappa\x12\x18\n\tmin_kappa\x18\x02 \x01(\x01:\x05-1000\x12\x17\n\tmax_kappa\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\x12\x10\n\x05speed\x18\x06 \x01(\x01:\x01\x31\"\x9b\x01\n\x0f\x44kappaCondition\x12\x14\n\x04name\x18\x01 \x01(\t:\x06\x64kappa\x12\x19\n\nmin_dkappa\x18\x02 \x01(\x01:\x05-1000\x12\x18\n\nmax_dkappa\x18\x03 \x01(\x01:\x04\x31\x30\x30\x30\x12\x16\n\x0bis_planning\x18\x04 \x01(\r:\x01\x30\x12\x13\n\x08interval\x18\x05 \x01(\x01:\x01\x31\x12\x10\n\x05speed\x18\x06 \x01(\x01:\x01\x31\"\xf1\x01\n\x16ObjectOverlapCondition\x12\x19\n\x11source_object_ids\x18\x01 \x01(\t\x12\x19\n\x11target_object_ids\x18\x02 \x01(\t\x12\x10\n\x08\x64istance\x18\x03 \x01(\x01\x12U\n\tdirection\x18\x04 \x01(\x0e\x32\x34.adu.simulation.ObjectOverlapCondition.DirectionType:\x0cNOT_REQUIRED\"8\n\rDirectionType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x10\n\x0cNOT_REQUIRED\x10\x01\x12\x08\n\x04\x42\x41\x43K\x10\x02\"i\n\x16RegionOverlapCondition\x12\x12\n\nobject_ids\x18\x01 \x01(\t\x12\x1c\n\x10region_corner_xy\x18\x02 \x03(\x01\x42\x02\x10\x01\x12\x1d\n\x15require_fully_contain\x18\x03 \x01(\x08\"X\n\x1cLineSegmentsOverlapCondition\x12\x12\n\nobject_ids\x18\x01 \x01(\t\x12$\n\x06points\x18\x02 \x03(\x0b\x32\x14.adu.common.PointENU\"V\n\x15TrafficLightCondition\x12=\n\rtraffic_light\x18\x01 \x01(\x0b\x32&.adu.common.traffic_light.TrafficLight\"\xb3\x01\n\x18RegionOverlapLWCondition\x12\x12\n\nobject_ids\x18\x01 \x01(\t\x12\t\n\x01x\x18\x02 \x01(\x01\x12\t\n\x01y\x18\x03 \x01(\x01\x12\x0e\n\x06length\x18\x04 \x01(\x01\x12\r\n\x05width\x18\x05 \x01(\x01\x12\x1d\n\x15require_fully_contain\x18\x06 \x01(\x08\x12\x15\n\x06logsim\x18\x07 \x01(\x08:\x05\x66\x61lse\x12\x18\n\x0blogsim_vthr\x18\x08 \x01(\x01:\x03\x30.5\"(\n\x0bRunRedLight\x12\x19\n\x04name\x18\x01 \x01(\t:\x0brunredlight\"h\n\x15MainDecisionCondition\x12\x15\n\x04name\x18\x01 \x01(\t:\x07no task\x12\x38\n\rmain_decision\x18\x02 \x01(\x0b\x32!.adu.common.decision.MainDecision\"\xe2\x01\n\x18ObjectNextToADCCondition\x12G\n\x08position\x18\x01 \x01(\x0e\x32\x35.adu.simulation.ObjectNextToADCCondition.PositionType\x12\x12\n\nobject_ids\x18\x02 \x01(\t\x12\x1a\n\x12\x66orward_s_distance\x18\x03 \x01(\x01\x12\x1b\n\x13\x62\x61\x63kward_s_distance\x18\x04 \x01(\x01\"0\n\x0cPositionType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04LEFT\x10\x01\x12\t\n\x05RIGHT\x10\x02\"T\n\x17ObjectLocationCondition\x12\x11\n\tobject_id\x18\x01 \x01(\t\x12&\n\x08location\x18\x02 \x01(\x0b\x32\x14.adu.common.PointENU\"X\n\x17ObjectDecisionCondition\x12=\n\x0fobject_decision\x18\x01 \x01(\x0b\x32$.adu.common.decision.ObjectDecisions\"\x92\x01\n\x13ObjectWaveCondition\x12\x15\n\x04name\x18\x01 \x01(\t:\x07id wave\x12\x14\n\x0c\x61\x64\x63_distance\x18\x02 \x01(\x01\x12\x15\n\rmove_distance\x18\x03 \x01(\x01\x12\x1a\n\nheading_th\x18\x04 \x01(\x01:\x06\x31.5708\x12\x1b\n\x0eshape_ratio_th\x18\x05 \x01(\x01:\x03\x30.5\"J\n\x10RoutingCondition\x12\x36\n\x0brouting_res\x18\x01 \x01(\x0b\x32!.adu.common.routing.RoutingResult\"5\n\x19\x41ngleWithHeadingCondition\x12\x18\n\x08\x61ngle_th\x18\x01 \x01(\x01:\x06\x32.3562\"d\n\x1c\x43ustomizedEmptyAreaCondition\x12\x18\n\x10region_corner_xy\x18\x01 \x03(\x01\x12\x15\n\nstart_time\x18\x02 \x01(\x01:\x01\x30\x12\x13\n\x08\x65nd_time\x18\x03 \x01(\x01:\x01\x30\"*\n\x13RetrogradeCondition\x12\x13\n\x08interval\x18\x01 \x01(\r:\x01\x35\"*\n\x12\x43rossLineCondition\x12\x14\n\x08interval\x18\x01 \x01(\r:\x02\x35\x30\"@\n\x13ParkingPosCondition\x12\x13\n\x05\x61ngle\x18\x01 \x01(\x01:\x04\x30.26\x12\x14\n\x08\x64uration\x18\x02 \x01(\x01:\x02\x35\x30\")\n\x12\x44ropFrameCondition\x12\x13\n\x08interval\x18\x01 \x01(\r:\x01\x32\",\n\x17TurnSpeedLimitCondition\x12\x11\n\x05speed\x18\x01 \x01(\x01:\x02\x33\x30\"+\n\x13\x43hangeLaneCondition\x12\x14\n\x08interval\x18\x01 \x01(\r:\x02\x31\x30\"\x11\n\x0fOnRoadCondition\"_\n\x18PlanningOutsideCondition\x12\x16\n\nstart_time\x18\x01 \x01(\x01:\x02-1\x12\x14\n\x08\x65nd_time\x18\x02 \x01(\x01:\x02-1\x12\x15\n\x08interval\x18\x03 \x01(\r:\x03\x32\x35\x30\"F\n\x12TurnLightCondition\x12\x14\n\x08interval\x18\x01 \x01(\r:\x02\x33\x30\x12\x1a\n\x08\x61ngle_th\x18\x02 \x01(\x01:\x08\x30.523599\"*\n\x12StopLimitCondition\x12\x14\n\x08\x64istance\x18\x01 \x01(\x01:\x02\x33\x30\"\xd4\x01\n\x1bPlanningTopicCheckCondition\x12\x14\n\x08\x64uration\x18\x01 \x01(\r:\x02\x32\x30\x12\x11\n\x06\x64\x65st_x\x18\x02 \x01(\x01:\x01\x30\x12\x11\n\x06\x64\x65st_y\x18\x03 \x01(\x01:\x01\x30\x12\x13\n\x08\x64\x65st_dis\x18\x04 \x01(\x01:\x01\x36\x12\x1c\n\x10start_toleration\x18\x05 \x01(\r:\x02\x35\x30\x12$\n\x18routing_during_tolerance\x18\x06 \x01(\r:\x02\x31\x30\x12 \n\x15routing_dis_tolerance\x18\x07 \x01(\x01:\x01\x32\"#\n!PredictionLineShapeCheckCondition\"B\n\x14PassThroughCondition\x12\x15\n\nstart_time\x18\x01 \x01(\x01:\x01\x30\x12\x13\n\x08\x65nd_time\x18\x02 \x01(\x01:\x01\x30\"\x18\n\x16\x43rosswalkStopCondition\"\x1d\n\x1bJunctionDecelerateCondition\"\x12\n\x10\x41\x64\x63WaveCondition\"\x13\n\x11\x41\x64\x63\x44riftCondition\";\n\x1aPlanningCurvatureCondition\x12\x1d\n\x0f\x63urvature_limit\x18\x01 \x01(\x01:\x04\x30.29\"\xb7\x01\n\x1aPlanningCollisionCondition\x12\x14\n\x08\x64uration\x18\x01 \x01(\x01:\x02\x31\x30\x12\x1a\n\rcollision_dis\x18\x02 \x01(\x01:\x03\x30.1\x12\x18\n\x0bvehicle_dis\x18\x03 \x01(\x01:\x03\x30.1\x12\x18\n\x0b\x62icycle_dis\x18\x04 \x01(\x01:\x03\x30.5\x12\x1b\n\x0epedestrian_dis\x18\x05 \x01(\x01:\x03\x30.5\x12\x16\n\x0brouting_dis\x18\x06 \x01(\x01:\x01\x32\"\x1a\n\x18IdentifyNolightCondition\"\x17\n\x15IdentifySlowCondition\"\x1b\n\x19\x44ropFrameMonitorCondition\"I\n\x17\x43hangeLaneFastCondition\x12\x14\n\x08interval\x18\x01 \x01(\r:\x02\x33\x35\x12\x18\n\x08\x61ngle_th\x18\x02 \x01(\x01:\x06\x30.2618\"G\n\x19\x43hangeLaneDoubleCondition\x12\x14\n\x08interval\x18\x01 \x01(\x01:\x02\x31\x30\x12\x14\n\x08\x64istance\x18\x02 \x01(\x01:\x02\x33\x30\"\x17\n\x15PlanningCoreCondition\"\xa9\x01\n\x15PlanningStopCondition\x12\x13\n\x08\x64uration\x18\x01 \x01(\x01:\x01\x31\x12\x12\n\x07mov_dis\x18\x02 \x01(\x01:\x01\x35\x12\x14\n\x08stop_dis\x18\x03 \x01(\x01:\x02\x31\x35\x12\x15\n\x08interval\x18\x04 \x01(\r:\x03\x31\x30\x30\x12\x11\n\x06\x64\x65st_x\x18\x05 \x01(\x01:\x01\x30\x12\x11\n\x06\x64\x65st_y\x18\x06 \x01(\x01:\x01\x30\x12\x14\n\x08\x64\x65st_dis\x18\x07 \x01(\x01:\x02\x31\x30\"\xbf\x01\n\x1fStraightChangeLineTimeCondition\x12\x13\n\x08\x62ug_time\x18\x01 \x01(\x01:\x01\x30\x12\x15\n\nstart_time\x18\x02 \x01(\x01:\x01\x30\x12\x13\n\x08\x65nd_time\x18\x03 \x01(\x01:\x01\x30\x12\x1a\n\x0f\x62uffer_distance\x18\x04 \x01(\x01:\x01\x30\x12\x0f\n\x04\x66lag\x18\x05 \x01(\x05:\x01\x31\x12\x18\n\rstop_distance\x18\x06 \x01(\x01:\x01\x31\x12\x14\n\x08\x64uration\x18\x07 \x01(\r:\x02\x31\x30\"\xc0\x01\n\x17\x43hangeLaneStopCondition\x12\x15\n\x08interval\x18\x01 \x01(\r:\x03\x31\x30\x30\x12\x14\n\x08stop_dis\x18\x02 \x01(\x01:\x02\x31\x35\x12\x1e\n\x0e\x66irst_angle_th\x18\x03 \x01(\x01:\x06\x30.0873\x12\x1c\n\x0c\x65nd_angle_th\x18\x04 \x01(\x01:\x06\x30.1745\x12\x11\n\x06\x64\x65st_x\x18\x05 \x01(\x01:\x01\x30\x12\x11\n\x06\x64\x65st_y\x18\x06 \x01(\x01:\x01\x30\x12\x14\n\x08\x64\x65st_dis\x18\x07 \x01(\x01:\x02\x31\x30\"\x87\x01\n\x16PlanningAheadCondition\x12\x13\n\x08\x64uration\x18\x01 \x01(\x01:\x01\x35\x12\x1a\n\rcollision_dis\x18\x02 \x01(\x01:\x03\x30.1\x12\x15\n\nstart_time\x18\x03 \x01(\x01:\x01\x30\x12\x13\n\x08\x65nd_time\x18\x04 \x01(\x01:\x01\x30\x12\x10\n\x06obj_id\x18\x05 \x01(\t:\x00\"\xad\x01\n\x15PlanningSlowCondition\x12\x15\n\x08\x64uration\x18\x01 \x01(\x01:\x03\x30.2\x12\x16\n\tspeed_min\x18\x02 \x01(\x01:\x03\x31.8\x12\x14\n\x08stop_dis\x18\x03 \x01(\x01:\x02\x31\x35\x12\x14\n\x08interval\x18\x04 \x01(\r:\x02\x38\x30\x12\x11\n\x06\x64\x65st_x\x18\x05 \x01(\x01:\x01\x30\x12\x11\n\x06\x64\x65st_y\x18\x06 \x01(\x01:\x01\x30\x12\x13\n\x08\x64\x65st_dis\x18\x07 \x01(\x01:\x01\x36\"X\n%PlanningChangeLaneAtJunctionCondition\x12\x13\n\x08\x64uration\x18\x01 \x01(\r:\x01\x35\x12\x1a\n\x0f\x64is_to_junction\x18\x02 \x01(\x01:\x01\x35\"t\n\x1bPlanningCustomStopCondition\x12\x13\n\x08\x64uration\x18\x01 \x01(\x01:\x01\x38\x12\x14\n\x07mov_dis\x18\x02 \x01(\x01:\x03\x31.5\x12\x15\n\nstart_time\x18\x03 \x01(\x01:\x01\x30\x12\x13\n\x08\x65nd_time\x18\x04 \x01(\x01:\x01\x30\"t\n\x1c\x41utoInvalidPlanningCondition\x12\x1a\n\x0f\x64is_to_junction\x18\x01 \x01(\x01:\x01\x35\x12\x1b\n\x0f\x63heck_frequency\x18\x02 \x01(\r:\x02\x35\x30\x12\x1b\n\x0e\x66\x61il_threshold\x18\x03 \x01(\x01:\x03\x30.5\"\xa3\x01\n\x14PaintDragonCondition\x12\x16\n\nstart_time\x18\x01 \x01(\x01:\x02-1\x12\x14\n\x08\x65nd_time\x18\x02 \x01(\x01:\x02-1\x12\r\n\x02th\x18\x03 \x01(\r:\x01\x32\x12\x1d\n\x0fmin_limit_value\x18\x04 \x01(\x01:\x04-0.2\x12\x1c\n\x0fmax_limit_value\x18\x05 \x01(\x01:\x03\x30.2\x12\x11\n\x04peak\x18\x06 \x01(\x01:\x03\x31.5\"Y\n&PlanningChangeLaneOnSolidLineCondition\x12\x13\n\x08\x64uration\x18\x01 \x01(\r:\x01\x35\x12\x1a\n\x0f\x64is_to_junction\x18\x02 \x01(\x01:\x01\x35\"Y\n&PlanningRoadShoulderCollisionCondition\x12\x13\n\x08\x64uration\x18\x01 \x01(\x01:\x01\x38\x12\x1a\n\rcollision_dis\x18\x02 \x01(\x01:\x03\x30.2\"\xa4\x01\n\x16TurnLightTimeCondition\x12\x16\n\nstart_time\x18\x01 \x01(\x01:\x02-1\x12\x14\n\x08\x65nd_time\x18\x02 \x01(\x01:\x02-1\x12\x1a\n\x0elimit_distance\x18\x03 \x01(\x01:\x02\x35\x30\x12\x17\n\nlimit_time\x18\x04 \x01(\x01:\x03\x31\x30\x30\x12\x16\n\nbuffer_seq\x18\x05 \x01(\r:\x02\x31\x30\x12\x0f\n\x04\x66lag\x18\x06 \x01(\r:\x01\x31\"j\n\x1c\x41\x64\x63\x43\x65ntralDeviationCondition\x12\x16\n\x0b\x64\x65viate_dis\x18\x01 \x01(\x01:\x01\x32\x12\x16\n\ttotal_num\x18\x02 \x01(\r:\x03\x31\x30\x30\x12\x1a\n\rtolerance_num\x18\x03 \x01(\r:\x03\x31\x30\x30\"2\n\x14IdentifyEndCondition\x12\x1a\n\x0f\x64is_to_junction\x18\x01 \x01(\x01:\x01\x33\"]\n\x1dPlanningAdcCollisionCondition\x12\x1f\n\x12\x63ollision_interval\x18\x01 \x01(\x01:\x03\x30.2\x12\x1b\n\x0fmin_check_speed\x18\x02 \x01(\x01:\x02\x31\x30\"@\n\x17\x43rossSolidLineCondition\x12\x14\n\x08interval\x18\x01 \x01(\r:\x02\x35\x30\x12\x0f\n\x04type\x18\x02 \x01(\r:\x01\x31\"\x80\x01\n\x18\x41\x64\x63InvalidUturnCondition\x12\x1a\n\x0f\x64is_to_junction\x18\x01 \x01(\x01:\x01\x33\x12\x12\n\x05\x64\x65lta\x18\x02 \x01(\x01:\x03\x31\x32\x30\x12\x16\n\tuturn_dis\x18\x03 \x01(\x01:\x03\x31\x32\x30\x12\x1c\n\ruturn_heading\x18\x04 \x01(\x01:\x05\x32.617\"F\n\x1a\x43\x61rDeviateCentralCondition\x12\x14\n\x08interval\x18\x01 \x01(\x01:\x02\x35\x30\x12\x12\n\x07\x64\x65viate\x18\x02 \x01(\x01:\x01\x31\"\x1a\n\x18JunctionConnectCondition\"\x18\n\x16\x43ompareRosbagCondition\"x\n\x19\x43hangeLaneNormalCondition\x12\x14\n\x08interval\x18\x01 \x01(\r:\x02\x35\x30\x12\x10\n\x03\x64is\x18\x02 \x01(\x01:\x03\x31\x30\x30\x12\x16\n\ndis_change\x18\x03 \x01(\x01:\x02\x32\x30\x12\x1b\n\x0f\x64is_to_junction\x18\x04 \x01(\x01:\x02\x35\x30\"B\n\x16HeadingOffsetCondition\x12\x13\n\x06offset\x18\x01 \x01(\x01:\x03\x30.5\x12\x13\n\x08\x64uration\x18\x02 \x01(\x01:\x01\x31\"9\n\x16UnknownOnRoadCondition\x12\x0e\n\x03num\x18\x01 \x01(\r:\x01\x35\x12\x0f\n\x03\x64is\x18\x02 \x01(\x01:\x02-1\"\x1d\n\x1bPressureYellowLineCondition\"_\n\x18PlanningDisDiffCondition\x12\x15\n\nbegin_time\x18\x01 \x01(\x01:\x01\x31\x12\x13\n\x08\x65nd_time\x18\x02 \x01(\x01:\x01\x31\x12\x17\n\ndelta_time\x18\x03 \x01(\x01:\x03\x30.1')
  ,
  dependencies=[common_geometry_pb2.DESCRIPTOR,decision_pb2.DESCRIPTOR,routing_pb2.DESCRIPTOR,traffic_light_detection_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LOGICALCONDITION_OPERATORTYPE = _descriptor.EnumDescriptor(
  name='OperatorType',
  full_name='adu.simulation.LogicalCondition.OperatorType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AND', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OR', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPLY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='XOR', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6214,
  serialized_end=6287,
)
_sym_db.RegisterEnumDescriptor(_LOGICALCONDITION_OPERATORTYPE)

_OBJECTOVERLAPCONDITION_DIRECTIONTYPE = _descriptor.EnumDescriptor(
  name='DirectionType',
  full_name='adu.simulation.ObjectOverlapCondition.DirectionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_REQUIRED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BACK', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7561,
  serialized_end=7617,
)
_sym_db.RegisterEnumDescriptor(_OBJECTOVERLAPCONDITION_DIRECTIONTYPE)

_OBJECTNEXTTOADCCONDITION_POSITIONTYPE = _descriptor.EnumDescriptor(
  name='PositionType',
  full_name='adu.simulation.ObjectNextToADCCondition.PositionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEFT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIGHT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=8413,
  serialized_end=8461,
)
_sym_db.RegisterEnumDescriptor(_OBJECTNEXTTOADCCONDITION_POSITIONTYPE)


_CONDITION = _descriptor.Descriptor(
  name='Condition',
  full_name='adu.simulation.Condition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='logical_condition', full_name='adu.simulation.Condition.logical_condition', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed_condition', full_name='adu.simulation.Condition.speed_condition', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_overlap_condition', full_name='adu.simulation.Condition.object_overlap_condition', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='acceleration_condition', full_name='adu.simulation.Condition.acceleration_condition', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='region_overlap_condition', full_name='adu.simulation.Condition.region_overlap_condition', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='region_overlap_lw_condition', full_name='adu.simulation.Condition.region_overlap_lw_condition', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='run_red_light_condition', full_name='adu.simulation.Condition.run_red_light_condition', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='main_decision_condition', full_name='adu.simulation.Condition.main_decision_condition', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='line_segments_overlap_condition', full_name='adu.simulation.Condition.line_segments_overlap_condition', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='traffic_light_condition', full_name='adu.simulation.Condition.traffic_light_condition', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_next_to_adc_condition', full_name='adu.simulation.Condition.object_next_to_adc_condition', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_location_condition', full_name='adu.simulation.Condition.object_location_condition', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_decision_condition', full_name='adu.simulation.Condition.object_decision_condition', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_wave_condition', full_name='adu.simulation.Condition.object_wave_condition', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='routing_condition', full_name='adu.simulation.Condition.routing_condition', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='angle_with_heading_condition', full_name='adu.simulation.Condition.angle_with_heading_condition', index=15,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='customized_empty_area_condition', full_name='adu.simulation.Condition.customized_empty_area_condition', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='retrograde_condition', full_name='adu.simulation.Condition.retrograde_condition', index=17,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_condition', full_name='adu.simulation.Condition.planning_condition', index=18,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cross_line_condition', full_name='adu.simulation.Condition.cross_line_condition', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parking_pos_condition', full_name='adu.simulation.Condition.parking_pos_condition', index=20,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drop_frame_condition', full_name='adu.simulation.Condition.drop_frame_condition', index=21,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='turn_speed_limit_condition', full_name='adu.simulation.Condition.turn_speed_limit_condition', index=22,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='change_lane_condition', full_name='adu.simulation.Condition.change_lane_condition', index=23,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='on_road_condition', full_name='adu.simulation.Condition.on_road_condition', index=24,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='turn_light_condition', full_name='adu.simulation.Condition.turn_light_condition', index=25,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_limit_condition', full_name='adu.simulation.Condition.stop_limit_condition', index=26,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_topic_check_condition', full_name='adu.simulation.Condition.planning_topic_check_condition', index=27,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prediction_line_shape_check_condition', full_name='adu.simulation.Condition.prediction_line_shape_check_condition', index=28,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pass_through_condition', full_name='adu.simulation.Condition.pass_through_condition', index=29,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crosswalk_stop_condition', full_name='adu.simulation.Condition.crosswalk_stop_condition', index=30,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='junction_decelerate_condition', full_name='adu.simulation.Condition.junction_decelerate_condition', index=31,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adc_wave_condition', full_name='adu.simulation.Condition.adc_wave_condition', index=32,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adc_drift_condition', full_name='adu.simulation.Condition.adc_drift_condition', index=33,
      number=34, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_curvature_condition', full_name='adu.simulation.Condition.planning_curvature_condition', index=34,
      number=35, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_collision_condition', full_name='adu.simulation.Condition.planning_collision_condition', index=35,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='identify_nolight_condition', full_name='adu.simulation.Condition.identify_nolight_condition', index=36,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='identify_slow_condition', full_name='adu.simulation.Condition.identify_slow_condition', index=37,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_outside_condition', full_name='adu.simulation.Condition.planning_outside_condition', index=38,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drop_frame_monitor_condition', full_name='adu.simulation.Condition.drop_frame_monitor_condition', index=39,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='change_lane_fast_condition', full_name='adu.simulation.Condition.change_lane_fast_condition', index=40,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='jerk_condition', full_name='adu.simulation.Condition.jerk_condition', index=41,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='yaw_condition', full_name='adu.simulation.Condition.yaw_condition', index=42,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='yaw_rate_condition', full_name='adu.simulation.Condition.yaw_rate_condition', index=43,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kappa_condition', full_name='adu.simulation.Condition.kappa_condition', index=44,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dkappa_condition', full_name='adu.simulation.Condition.dkappa_condition', index=45,
      number=46, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='change_lane_double_condition', full_name='adu.simulation.Condition.change_lane_double_condition', index=46,
      number=47, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_core_condition', full_name='adu.simulation.Condition.planning_core_condition', index=47,
      number=48, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_stop_condition', full_name='adu.simulation.Condition.planning_stop_condition', index=48,
      number=49, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='straight_change_line_time_condition', full_name='adu.simulation.Condition.straight_change_line_time_condition', index=49,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='change_lane_stop_condition', full_name='adu.simulation.Condition.change_lane_stop_condition', index=50,
      number=51, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_ahead_condition', full_name='adu.simulation.Condition.planning_ahead_condition', index=51,
      number=52, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_slow_condition', full_name='adu.simulation.Condition.planning_slow_condition', index=52,
      number=53, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_change_lane_at_junction_condition', full_name='adu.simulation.Condition.planning_change_lane_at_junction_condition', index=53,
      number=54, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_custom_stop_condition', full_name='adu.simulation.Condition.planning_custom_stop_condition', index=54,
      number=55, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auto_invalid_planning_condition', full_name='adu.simulation.Condition.auto_invalid_planning_condition', index=55,
      number=56, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paint_dragon_condition', full_name='adu.simulation.Condition.paint_dragon_condition', index=56,
      number=57, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_change_lane_on_solid_line_condition', full_name='adu.simulation.Condition.planning_change_lane_on_solid_line_condition', index=57,
      number=58, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_road_shoulder_collision_condition', full_name='adu.simulation.Condition.planning_road_shoulder_collision_condition', index=58,
      number=59, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='turn_light_time_condition', full_name='adu.simulation.Condition.turn_light_time_condition', index=59,
      number=60, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adc_central_deviation_condition', full_name='adu.simulation.Condition.adc_central_deviation_condition', index=60,
      number=61, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='identify_end_condition', full_name='adu.simulation.Condition.identify_end_condition', index=61,
      number=62, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_adc_collision_condition', full_name='adu.simulation.Condition.planning_adc_collision_condition', index=62,
      number=63, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cross_solid_line_condition', full_name='adu.simulation.Condition.cross_solid_line_condition', index=63,
      number=64, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adc_invalid_uturn_condition', full_name='adu.simulation.Condition.adc_invalid_uturn_condition', index=64,
      number=65, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='car_deviate_central_condition', full_name='adu.simulation.Condition.car_deviate_central_condition', index=65,
      number=66, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='junction_connect_condition', full_name='adu.simulation.Condition.junction_connect_condition', index=66,
      number=67, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='compare_rosbag_condition', full_name='adu.simulation.Condition.compare_rosbag_condition', index=67,
      number=68, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='change_lane_normal_condition', full_name='adu.simulation.Condition.change_lane_normal_condition', index=68,
      number=69, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='heading_offset_condition', full_name='adu.simulation.Condition.heading_offset_condition', index=69,
      number=70, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unknown_on_road_condition', full_name='adu.simulation.Condition.unknown_on_road_condition', index=70,
      number=71, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pressure_yellow_line_condition', full_name='adu.simulation.Condition.pressure_yellow_line_condition', index=71,
      number=72, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='planning_dis_diff_condition', full_name='adu.simulation.Condition.planning_dis_diff_condition', index=72,
      number=73, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='condition', full_name='adu.simulation.Condition.condition',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=132,
  serialized_end=5795,
)


_PLANNINGCONDITION = _descriptor.Descriptor(
  name='PlanningCondition',
  full_name='adu.simulation.PlanningCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_acceleration', full_name='adu.simulation.PlanningCondition.max_acceleration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_acceleration', full_name='adu.simulation.PlanningCondition.min_acceleration', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_acceleration_change_rate', full_name='adu.simulation.PlanningCondition.max_acceleration_change_rate', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_acceleration_change_rate', full_name='adu.simulation.PlanningCondition.min_acceleration_change_rate', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='curvature', full_name='adu.simulation.PlanningCondition.curvature', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='curvature_change_rate', full_name='adu.simulation.PlanningCondition.curvature_change_rate', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_centripetal_acceleration', full_name='adu.simulation.PlanningCondition.max_centripetal_acceleration', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_centripetal_acceleration', full_name='adu.simulation.PlanningCondition.min_centripetal_acceleration', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5798,
  serialized_end=6071,
)


_LOGICALCONDITION = _descriptor.Descriptor(
  name='LogicalCondition',
  full_name='adu.simulation.LogicalCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operator_type', full_name='adu.simulation.LogicalCondition.operator_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sub_condition', full_name='adu.simulation.LogicalCondition.sub_condition', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGICALCONDITION_OPERATORTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6074,
  serialized_end=6287,
)


_SPEEDCONDITION = _descriptor.Descriptor(
  name='SpeedCondition',
  full_name='adu.simulation.SpeedCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.SpeedCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("speed").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_speed', full_name='adu.simulation.SpeedCondition.min_speed', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_speed', full_name='adu.simulation.SpeedCondition.max_speed', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.SpeedCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.SpeedCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6290,
  serialized_end=6419,
)


_ACCELERATIONCONDITION = _descriptor.Descriptor(
  name='AccelerationCondition',
  full_name='adu.simulation.AccelerationCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.AccelerationCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("acceleration").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_acceleration', full_name='adu.simulation.AccelerationCondition.min_acceleration', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_acceleration', full_name='adu.simulation.AccelerationCondition.max_acceleration', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.AccelerationCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.AccelerationCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.AccelerationCondition.speed', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6422,
  serialized_end=6601,
)


_JERKCONDITION = _descriptor.Descriptor(
  name='JerkCondition',
  full_name='adu.simulation.JerkCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.JerkCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("jerk").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_jerk', full_name='adu.simulation.JerkCondition.min_jerk', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_jerk', full_name='adu.simulation.JerkCondition.max_jerk', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.JerkCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.JerkCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.JerkCondition.speed', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6604,
  serialized_end=6751,
)


_YAWCONDITION = _descriptor.Descriptor(
  name='YawCondition',
  full_name='adu.simulation.YawCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.YawCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("yaw").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_yaw', full_name='adu.simulation.YawCondition.min_yaw', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_yaw', full_name='adu.simulation.YawCondition.max_yaw', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.YawCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.YawCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.YawCondition.speed', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6754,
  serialized_end=6897,
)


_YAWRATECONDITION = _descriptor.Descriptor(
  name='YawRateCondition',
  full_name='adu.simulation.YawRateCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.YawRateCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("yawrate").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_yaw_rate', full_name='adu.simulation.YawRateCondition.min_yaw_rate', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_yaw_rate', full_name='adu.simulation.YawRateCondition.max_yaw_rate', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.YawRateCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.YawRateCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.YawRateCondition.speed', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6900,
  serialized_end=7061,
)


_KAPPACONDITION = _descriptor.Descriptor(
  name='KappaCondition',
  full_name='adu.simulation.KappaCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.KappaCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("kappa").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_kappa', full_name='adu.simulation.KappaCondition.min_kappa', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_kappa', full_name='adu.simulation.KappaCondition.max_kappa', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.KappaCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.KappaCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.KappaCondition.speed', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7064,
  serialized_end=7215,
)


_DKAPPACONDITION = _descriptor.Descriptor(
  name='DkappaCondition',
  full_name='adu.simulation.DkappaCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.DkappaCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("dkappa").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_dkappa', full_name='adu.simulation.DkappaCondition.min_dkappa', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_dkappa', full_name='adu.simulation.DkappaCondition.max_dkappa', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_planning', full_name='adu.simulation.DkappaCondition.is_planning', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.DkappaCondition.interval', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.DkappaCondition.speed', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7218,
  serialized_end=7373,
)


_OBJECTOVERLAPCONDITION = _descriptor.Descriptor(
  name='ObjectOverlapCondition',
  full_name='adu.simulation.ObjectOverlapCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_object_ids', full_name='adu.simulation.ObjectOverlapCondition.source_object_ids', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target_object_ids', full_name='adu.simulation.ObjectOverlapCondition.target_object_ids', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distance', full_name='adu.simulation.ObjectOverlapCondition.distance', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='direction', full_name='adu.simulation.ObjectOverlapCondition.direction', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OBJECTOVERLAPCONDITION_DIRECTIONTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7376,
  serialized_end=7617,
)


_REGIONOVERLAPCONDITION = _descriptor.Descriptor(
  name='RegionOverlapCondition',
  full_name='adu.simulation.RegionOverlapCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_ids', full_name='adu.simulation.RegionOverlapCondition.object_ids', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='region_corner_xy', full_name='adu.simulation.RegionOverlapCondition.region_corner_xy', index=1,
      number=2, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='require_fully_contain', full_name='adu.simulation.RegionOverlapCondition.require_fully_contain', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7619,
  serialized_end=7724,
)


_LINESEGMENTSOVERLAPCONDITION = _descriptor.Descriptor(
  name='LineSegmentsOverlapCondition',
  full_name='adu.simulation.LineSegmentsOverlapCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_ids', full_name='adu.simulation.LineSegmentsOverlapCondition.object_ids', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='points', full_name='adu.simulation.LineSegmentsOverlapCondition.points', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7726,
  serialized_end=7814,
)


_TRAFFICLIGHTCONDITION = _descriptor.Descriptor(
  name='TrafficLightCondition',
  full_name='adu.simulation.TrafficLightCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='traffic_light', full_name='adu.simulation.TrafficLightCondition.traffic_light', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7816,
  serialized_end=7902,
)


_REGIONOVERLAPLWCONDITION = _descriptor.Descriptor(
  name='RegionOverlapLWCondition',
  full_name='adu.simulation.RegionOverlapLWCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_ids', full_name='adu.simulation.RegionOverlapLWCondition.object_ids', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='x', full_name='adu.simulation.RegionOverlapLWCondition.x', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y', full_name='adu.simulation.RegionOverlapLWCondition.y', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='length', full_name='adu.simulation.RegionOverlapLWCondition.length', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='width', full_name='adu.simulation.RegionOverlapLWCondition.width', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='require_fully_contain', full_name='adu.simulation.RegionOverlapLWCondition.require_fully_contain', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logsim', full_name='adu.simulation.RegionOverlapLWCondition.logsim', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logsim_vthr', full_name='adu.simulation.RegionOverlapLWCondition.logsim_vthr', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7905,
  serialized_end=8084,
)


_RUNREDLIGHT = _descriptor.Descriptor(
  name='RunRedLight',
  full_name='adu.simulation.RunRedLight',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.RunRedLight.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("runredlight").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8086,
  serialized_end=8126,
)


_MAINDECISIONCONDITION = _descriptor.Descriptor(
  name='MainDecisionCondition',
  full_name='adu.simulation.MainDecisionCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.MainDecisionCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("no task").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='main_decision', full_name='adu.simulation.MainDecisionCondition.main_decision', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8128,
  serialized_end=8232,
)


_OBJECTNEXTTOADCCONDITION = _descriptor.Descriptor(
  name='ObjectNextToADCCondition',
  full_name='adu.simulation.ObjectNextToADCCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='position', full_name='adu.simulation.ObjectNextToADCCondition.position', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_ids', full_name='adu.simulation.ObjectNextToADCCondition.object_ids', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='forward_s_distance', full_name='adu.simulation.ObjectNextToADCCondition.forward_s_distance', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='backward_s_distance', full_name='adu.simulation.ObjectNextToADCCondition.backward_s_distance', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OBJECTNEXTTOADCCONDITION_POSITIONTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8235,
  serialized_end=8461,
)


_OBJECTLOCATIONCONDITION = _descriptor.Descriptor(
  name='ObjectLocationCondition',
  full_name='adu.simulation.ObjectLocationCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_id', full_name='adu.simulation.ObjectLocationCondition.object_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='adu.simulation.ObjectLocationCondition.location', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8463,
  serialized_end=8547,
)


_OBJECTDECISIONCONDITION = _descriptor.Descriptor(
  name='ObjectDecisionCondition',
  full_name='adu.simulation.ObjectDecisionCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_decision', full_name='adu.simulation.ObjectDecisionCondition.object_decision', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8549,
  serialized_end=8637,
)


_OBJECTWAVECONDITION = _descriptor.Descriptor(
  name='ObjectWaveCondition',
  full_name='adu.simulation.ObjectWaveCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='adu.simulation.ObjectWaveCondition.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("id wave").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adc_distance', full_name='adu.simulation.ObjectWaveCondition.adc_distance', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='move_distance', full_name='adu.simulation.ObjectWaveCondition.move_distance', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='heading_th', full_name='adu.simulation.ObjectWaveCondition.heading_th', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1.5708,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shape_ratio_th', full_name='adu.simulation.ObjectWaveCondition.shape_ratio_th', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8640,
  serialized_end=8786,
)


_ROUTINGCONDITION = _descriptor.Descriptor(
  name='RoutingCondition',
  full_name='adu.simulation.RoutingCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='routing_res', full_name='adu.simulation.RoutingCondition.routing_res', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8788,
  serialized_end=8862,
)


_ANGLEWITHHEADINGCONDITION = _descriptor.Descriptor(
  name='AngleWithHeadingCondition',
  full_name='adu.simulation.AngleWithHeadingCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='angle_th', full_name='adu.simulation.AngleWithHeadingCondition.angle_th', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=2.3562,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8864,
  serialized_end=8917,
)


_CUSTOMIZEDEMPTYAREACONDITION = _descriptor.Descriptor(
  name='CustomizedEmptyAreaCondition',
  full_name='adu.simulation.CustomizedEmptyAreaCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='region_corner_xy', full_name='adu.simulation.CustomizedEmptyAreaCondition.region_corner_xy', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.CustomizedEmptyAreaCondition.start_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.CustomizedEmptyAreaCondition.end_time', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8919,
  serialized_end=9019,
)


_RETROGRADECONDITION = _descriptor.Descriptor(
  name='RetrogradeCondition',
  full_name='adu.simulation.RetrogradeCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.RetrogradeCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9021,
  serialized_end=9063,
)


_CROSSLINECONDITION = _descriptor.Descriptor(
  name='CrossLineCondition',
  full_name='adu.simulation.CrossLineCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.CrossLineCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9065,
  serialized_end=9107,
)


_PARKINGPOSCONDITION = _descriptor.Descriptor(
  name='ParkingPosCondition',
  full_name='adu.simulation.ParkingPosCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='angle', full_name='adu.simulation.ParkingPosCondition.angle', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.26,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.ParkingPosCondition.duration', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9109,
  serialized_end=9173,
)


_DROPFRAMECONDITION = _descriptor.Descriptor(
  name='DropFrameCondition',
  full_name='adu.simulation.DropFrameCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.DropFrameCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9175,
  serialized_end=9216,
)


_TURNSPEEDLIMITCONDITION = _descriptor.Descriptor(
  name='TurnSpeedLimitCondition',
  full_name='adu.simulation.TurnSpeedLimitCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='speed', full_name='adu.simulation.TurnSpeedLimitCondition.speed', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9218,
  serialized_end=9262,
)


_CHANGELANECONDITION = _descriptor.Descriptor(
  name='ChangeLaneCondition',
  full_name='adu.simulation.ChangeLaneCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.ChangeLaneCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9264,
  serialized_end=9307,
)


_ONROADCONDITION = _descriptor.Descriptor(
  name='OnRoadCondition',
  full_name='adu.simulation.OnRoadCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9309,
  serialized_end=9326,
)


_PLANNINGOUTSIDECONDITION = _descriptor.Descriptor(
  name='PlanningOutsideCondition',
  full_name='adu.simulation.PlanningOutsideCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.PlanningOutsideCondition.start_time', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.PlanningOutsideCondition.end_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.PlanningOutsideCondition.interval', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=250,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9328,
  serialized_end=9423,
)


_TURNLIGHTCONDITION = _descriptor.Descriptor(
  name='TurnLightCondition',
  full_name='adu.simulation.TurnLightCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.TurnLightCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='angle_th', full_name='adu.simulation.TurnLightCondition.angle_th', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.523599,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9425,
  serialized_end=9495,
)


_STOPLIMITCONDITION = _descriptor.Descriptor(
  name='StopLimitCondition',
  full_name='adu.simulation.StopLimitCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distance', full_name='adu.simulation.StopLimitCondition.distance', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9497,
  serialized_end=9539,
)


_PLANNINGTOPICCHECKCONDITION = _descriptor.Descriptor(
  name='PlanningTopicCheckCondition',
  full_name='adu.simulation.PlanningTopicCheckCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningTopicCheckCondition.duration', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=20,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_x', full_name='adu.simulation.PlanningTopicCheckCondition.dest_x', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_y', full_name='adu.simulation.PlanningTopicCheckCondition.dest_y', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_dis', full_name='adu.simulation.PlanningTopicCheckCondition.dest_dis', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=6,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_toleration', full_name='adu.simulation.PlanningTopicCheckCondition.start_toleration', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='routing_during_tolerance', full_name='adu.simulation.PlanningTopicCheckCondition.routing_during_tolerance', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='routing_dis_tolerance', full_name='adu.simulation.PlanningTopicCheckCondition.routing_dis_tolerance', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9542,
  serialized_end=9754,
)


_PREDICTIONLINESHAPECHECKCONDITION = _descriptor.Descriptor(
  name='PredictionLineShapeCheckCondition',
  full_name='adu.simulation.PredictionLineShapeCheckCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9756,
  serialized_end=9791,
)


_PASSTHROUGHCONDITION = _descriptor.Descriptor(
  name='PassThroughCondition',
  full_name='adu.simulation.PassThroughCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.PassThroughCondition.start_time', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.PassThroughCondition.end_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9793,
  serialized_end=9859,
)


_CROSSWALKSTOPCONDITION = _descriptor.Descriptor(
  name='CrosswalkStopCondition',
  full_name='adu.simulation.CrosswalkStopCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9861,
  serialized_end=9885,
)


_JUNCTIONDECELERATECONDITION = _descriptor.Descriptor(
  name='JunctionDecelerateCondition',
  full_name='adu.simulation.JunctionDecelerateCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9887,
  serialized_end=9916,
)


_ADCWAVECONDITION = _descriptor.Descriptor(
  name='AdcWaveCondition',
  full_name='adu.simulation.AdcWaveCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9918,
  serialized_end=9936,
)


_ADCDRIFTCONDITION = _descriptor.Descriptor(
  name='AdcDriftCondition',
  full_name='adu.simulation.AdcDriftCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9938,
  serialized_end=9957,
)


_PLANNINGCURVATURECONDITION = _descriptor.Descriptor(
  name='PlanningCurvatureCondition',
  full_name='adu.simulation.PlanningCurvatureCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='curvature_limit', full_name='adu.simulation.PlanningCurvatureCondition.curvature_limit', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.29,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9959,
  serialized_end=10018,
)


_PLANNINGCOLLISIONCONDITION = _descriptor.Descriptor(
  name='PlanningCollisionCondition',
  full_name='adu.simulation.PlanningCollisionCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningCollisionCondition.duration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collision_dis', full_name='adu.simulation.PlanningCollisionCondition.collision_dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vehicle_dis', full_name='adu.simulation.PlanningCollisionCondition.vehicle_dis', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bicycle_dis', full_name='adu.simulation.PlanningCollisionCondition.bicycle_dis', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pedestrian_dis', full_name='adu.simulation.PlanningCollisionCondition.pedestrian_dis', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='routing_dis', full_name='adu.simulation.PlanningCollisionCondition.routing_dis', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10021,
  serialized_end=10204,
)


_IDENTIFYNOLIGHTCONDITION = _descriptor.Descriptor(
  name='IdentifyNolightCondition',
  full_name='adu.simulation.IdentifyNolightCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10206,
  serialized_end=10232,
)


_IDENTIFYSLOWCONDITION = _descriptor.Descriptor(
  name='IdentifySlowCondition',
  full_name='adu.simulation.IdentifySlowCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10234,
  serialized_end=10257,
)


_DROPFRAMEMONITORCONDITION = _descriptor.Descriptor(
  name='DropFrameMonitorCondition',
  full_name='adu.simulation.DropFrameMonitorCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10259,
  serialized_end=10286,
)


_CHANGELANEFASTCONDITION = _descriptor.Descriptor(
  name='ChangeLaneFastCondition',
  full_name='adu.simulation.ChangeLaneFastCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.ChangeLaneFastCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=35,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='angle_th', full_name='adu.simulation.ChangeLaneFastCondition.angle_th', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.2618,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10288,
  serialized_end=10361,
)


_CHANGELANEDOUBLECONDITION = _descriptor.Descriptor(
  name='ChangeLaneDoubleCondition',
  full_name='adu.simulation.ChangeLaneDoubleCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.ChangeLaneDoubleCondition.interval', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distance', full_name='adu.simulation.ChangeLaneDoubleCondition.distance', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10363,
  serialized_end=10434,
)


_PLANNINGCORECONDITION = _descriptor.Descriptor(
  name='PlanningCoreCondition',
  full_name='adu.simulation.PlanningCoreCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10436,
  serialized_end=10459,
)


_PLANNINGSTOPCONDITION = _descriptor.Descriptor(
  name='PlanningStopCondition',
  full_name='adu.simulation.PlanningStopCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningStopCondition.duration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mov_dis', full_name='adu.simulation.PlanningStopCondition.mov_dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_dis', full_name='adu.simulation.PlanningStopCondition.stop_dis', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=15,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.PlanningStopCondition.interval', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_x', full_name='adu.simulation.PlanningStopCondition.dest_x', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_y', full_name='adu.simulation.PlanningStopCondition.dest_y', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_dis', full_name='adu.simulation.PlanningStopCondition.dest_dis', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10462,
  serialized_end=10631,
)


_STRAIGHTCHANGELINETIMECONDITION = _descriptor.Descriptor(
  name='StraightChangeLineTimeCondition',
  full_name='adu.simulation.StraightChangeLineTimeCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bug_time', full_name='adu.simulation.StraightChangeLineTimeCondition.bug_time', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.StraightChangeLineTimeCondition.start_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.StraightChangeLineTimeCondition.end_time', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='buffer_distance', full_name='adu.simulation.StraightChangeLineTimeCondition.buffer_distance', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flag', full_name='adu.simulation.StraightChangeLineTimeCondition.flag', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_distance', full_name='adu.simulation.StraightChangeLineTimeCondition.stop_distance', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.StraightChangeLineTimeCondition.duration', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10634,
  serialized_end=10825,
)


_CHANGELANESTOPCONDITION = _descriptor.Descriptor(
  name='ChangeLaneStopCondition',
  full_name='adu.simulation.ChangeLaneStopCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.ChangeLaneStopCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_dis', full_name='adu.simulation.ChangeLaneStopCondition.stop_dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=15,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='first_angle_th', full_name='adu.simulation.ChangeLaneStopCondition.first_angle_th', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.0873,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_angle_th', full_name='adu.simulation.ChangeLaneStopCondition.end_angle_th', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.1745,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_x', full_name='adu.simulation.ChangeLaneStopCondition.dest_x', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_y', full_name='adu.simulation.ChangeLaneStopCondition.dest_y', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_dis', full_name='adu.simulation.ChangeLaneStopCondition.dest_dis', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10828,
  serialized_end=11020,
)


_PLANNINGAHEADCONDITION = _descriptor.Descriptor(
  name='PlanningAheadCondition',
  full_name='adu.simulation.PlanningAheadCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningAheadCondition.duration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collision_dis', full_name='adu.simulation.PlanningAheadCondition.collision_dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.PlanningAheadCondition.start_time', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.PlanningAheadCondition.end_time', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='obj_id', full_name='adu.simulation.PlanningAheadCondition.obj_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11023,
  serialized_end=11158,
)


_PLANNINGSLOWCONDITION = _descriptor.Descriptor(
  name='PlanningSlowCondition',
  full_name='adu.simulation.PlanningSlowCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningSlowCondition.duration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed_min', full_name='adu.simulation.PlanningSlowCondition.speed_min', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1.8,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_dis', full_name='adu.simulation.PlanningSlowCondition.stop_dis', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=15,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.PlanningSlowCondition.interval', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=80,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_x', full_name='adu.simulation.PlanningSlowCondition.dest_x', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_y', full_name='adu.simulation.PlanningSlowCondition.dest_y', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_dis', full_name='adu.simulation.PlanningSlowCondition.dest_dis', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=6,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11161,
  serialized_end=11334,
)


_PLANNINGCHANGELANEATJUNCTIONCONDITION = _descriptor.Descriptor(
  name='PlanningChangeLaneAtJunctionCondition',
  full_name='adu.simulation.PlanningChangeLaneAtJunctionCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningChangeLaneAtJunctionCondition.duration', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dis_to_junction', full_name='adu.simulation.PlanningChangeLaneAtJunctionCondition.dis_to_junction', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11336,
  serialized_end=11424,
)


_PLANNINGCUSTOMSTOPCONDITION = _descriptor.Descriptor(
  name='PlanningCustomStopCondition',
  full_name='adu.simulation.PlanningCustomStopCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningCustomStopCondition.duration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=8,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mov_dis', full_name='adu.simulation.PlanningCustomStopCondition.mov_dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.PlanningCustomStopCondition.start_time', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.PlanningCustomStopCondition.end_time', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11426,
  serialized_end=11542,
)


_AUTOINVALIDPLANNINGCONDITION = _descriptor.Descriptor(
  name='AutoInvalidPlanningCondition',
  full_name='adu.simulation.AutoInvalidPlanningCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dis_to_junction', full_name='adu.simulation.AutoInvalidPlanningCondition.dis_to_junction', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check_frequency', full_name='adu.simulation.AutoInvalidPlanningCondition.check_frequency', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fail_threshold', full_name='adu.simulation.AutoInvalidPlanningCondition.fail_threshold', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11544,
  serialized_end=11660,
)


_PAINTDRAGONCONDITION = _descriptor.Descriptor(
  name='PaintDragonCondition',
  full_name='adu.simulation.PaintDragonCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.PaintDragonCondition.start_time', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.PaintDragonCondition.end_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='th', full_name='adu.simulation.PaintDragonCondition.th', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_limit_value', full_name='adu.simulation.PaintDragonCondition.min_limit_value', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-0.2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_limit_value', full_name='adu.simulation.PaintDragonCondition.max_limit_value', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='peak', full_name='adu.simulation.PaintDragonCondition.peak', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11663,
  serialized_end=11826,
)


_PLANNINGCHANGELANEONSOLIDLINECONDITION = _descriptor.Descriptor(
  name='PlanningChangeLaneOnSolidLineCondition',
  full_name='adu.simulation.PlanningChangeLaneOnSolidLineCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningChangeLaneOnSolidLineCondition.duration', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dis_to_junction', full_name='adu.simulation.PlanningChangeLaneOnSolidLineCondition.dis_to_junction', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11828,
  serialized_end=11917,
)


_PLANNINGROADSHOULDERCOLLISIONCONDITION = _descriptor.Descriptor(
  name='PlanningRoadShoulderCollisionCondition',
  full_name='adu.simulation.PlanningRoadShoulderCollisionCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.PlanningRoadShoulderCollisionCondition.duration', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=8,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collision_dis', full_name='adu.simulation.PlanningRoadShoulderCollisionCondition.collision_dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11919,
  serialized_end=12008,
)


_TURNLIGHTTIMECONDITION = _descriptor.Descriptor(
  name='TurnLightTimeCondition',
  full_name='adu.simulation.TurnLightTimeCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='adu.simulation.TurnLightTimeCondition.start_time', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.TurnLightTimeCondition.end_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='limit_distance', full_name='adu.simulation.TurnLightTimeCondition.limit_distance', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='limit_time', full_name='adu.simulation.TurnLightTimeCondition.limit_time', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='buffer_seq', full_name='adu.simulation.TurnLightTimeCondition.buffer_seq', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flag', full_name='adu.simulation.TurnLightTimeCondition.flag', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12011,
  serialized_end=12175,
)


_ADCCENTRALDEVIATIONCONDITION = _descriptor.Descriptor(
  name='AdcCentralDeviationCondition',
  full_name='adu.simulation.AdcCentralDeviationCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='deviate_dis', full_name='adu.simulation.AdcCentralDeviationCondition.deviate_dis', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total_num', full_name='adu.simulation.AdcCentralDeviationCondition.total_num', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tolerance_num', full_name='adu.simulation.AdcCentralDeviationCondition.tolerance_num', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12177,
  serialized_end=12283,
)


_IDENTIFYENDCONDITION = _descriptor.Descriptor(
  name='IdentifyEndCondition',
  full_name='adu.simulation.IdentifyEndCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dis_to_junction', full_name='adu.simulation.IdentifyEndCondition.dis_to_junction', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=3,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12285,
  serialized_end=12335,
)


_PLANNINGADCCOLLISIONCONDITION = _descriptor.Descriptor(
  name='PlanningAdcCollisionCondition',
  full_name='adu.simulation.PlanningAdcCollisionCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collision_interval', full_name='adu.simulation.PlanningAdcCollisionCondition.collision_interval', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_check_speed', full_name='adu.simulation.PlanningAdcCollisionCondition.min_check_speed', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12337,
  serialized_end=12430,
)


_CROSSSOLIDLINECONDITION = _descriptor.Descriptor(
  name='CrossSolidLineCondition',
  full_name='adu.simulation.CrossSolidLineCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.CrossSolidLineCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='adu.simulation.CrossSolidLineCondition.type', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12432,
  serialized_end=12496,
)


_ADCINVALIDUTURNCONDITION = _descriptor.Descriptor(
  name='AdcInvalidUturnCondition',
  full_name='adu.simulation.AdcInvalidUturnCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dis_to_junction', full_name='adu.simulation.AdcInvalidUturnCondition.dis_to_junction', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=3,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delta', full_name='adu.simulation.AdcInvalidUturnCondition.delta', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=120,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uturn_dis', full_name='adu.simulation.AdcInvalidUturnCondition.uturn_dis', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=120,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uturn_heading', full_name='adu.simulation.AdcInvalidUturnCondition.uturn_heading', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=2.617,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12499,
  serialized_end=12627,
)


_CARDEVIATECENTRALCONDITION = _descriptor.Descriptor(
  name='CarDeviateCentralCondition',
  full_name='adu.simulation.CarDeviateCentralCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.CarDeviateCentralCondition.interval', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deviate', full_name='adu.simulation.CarDeviateCentralCondition.deviate', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12629,
  serialized_end=12699,
)


_JUNCTIONCONNECTCONDITION = _descriptor.Descriptor(
  name='JunctionConnectCondition',
  full_name='adu.simulation.JunctionConnectCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12701,
  serialized_end=12727,
)


_COMPAREROSBAGCONDITION = _descriptor.Descriptor(
  name='CompareRosbagCondition',
  full_name='adu.simulation.CompareRosbagCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12729,
  serialized_end=12753,
)


_CHANGELANENORMALCONDITION = _descriptor.Descriptor(
  name='ChangeLaneNormalCondition',
  full_name='adu.simulation.ChangeLaneNormalCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='adu.simulation.ChangeLaneNormalCondition.interval', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dis', full_name='adu.simulation.ChangeLaneNormalCondition.dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dis_change', full_name='adu.simulation.ChangeLaneNormalCondition.dis_change', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=20,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dis_to_junction', full_name='adu.simulation.ChangeLaneNormalCondition.dis_to_junction', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12755,
  serialized_end=12875,
)


_HEADINGOFFSETCONDITION = _descriptor.Descriptor(
  name='HeadingOffsetCondition',
  full_name='adu.simulation.HeadingOffsetCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='adu.simulation.HeadingOffsetCondition.offset', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='adu.simulation.HeadingOffsetCondition.duration', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12877,
  serialized_end=12943,
)


_UNKNOWNONROADCONDITION = _descriptor.Descriptor(
  name='UnknownOnRoadCondition',
  full_name='adu.simulation.UnknownOnRoadCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num', full_name='adu.simulation.UnknownOnRoadCondition.num', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=5,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dis', full_name='adu.simulation.UnknownOnRoadCondition.dis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12945,
  serialized_end=13002,
)


_PRESSUREYELLOWLINECONDITION = _descriptor.Descriptor(
  name='PressureYellowLineCondition',
  full_name='adu.simulation.PressureYellowLineCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13004,
  serialized_end=13033,
)


_PLANNINGDISDIFFCONDITION = _descriptor.Descriptor(
  name='PlanningDisDiffCondition',
  full_name='adu.simulation.PlanningDisDiffCondition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='begin_time', full_name='adu.simulation.PlanningDisDiffCondition.begin_time', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='adu.simulation.PlanningDisDiffCondition.end_time', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delta_time', full_name='adu.simulation.PlanningDisDiffCondition.delta_time', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=0.1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13035,
  serialized_end=13130,
)

_CONDITION.fields_by_name['logical_condition'].message_type = _LOGICALCONDITION
_CONDITION.fields_by_name['speed_condition'].message_type = _SPEEDCONDITION
_CONDITION.fields_by_name['object_overlap_condition'].message_type = _OBJECTOVERLAPCONDITION
_CONDITION.fields_by_name['acceleration_condition'].message_type = _ACCELERATIONCONDITION
_CONDITION.fields_by_name['region_overlap_condition'].message_type = _REGIONOVERLAPCONDITION
_CONDITION.fields_by_name['region_overlap_lw_condition'].message_type = _REGIONOVERLAPLWCONDITION
_CONDITION.fields_by_name['run_red_light_condition'].message_type = _RUNREDLIGHT
_CONDITION.fields_by_name['main_decision_condition'].message_type = _MAINDECISIONCONDITION
_CONDITION.fields_by_name['line_segments_overlap_condition'].message_type = _LINESEGMENTSOVERLAPCONDITION
_CONDITION.fields_by_name['traffic_light_condition'].message_type = _TRAFFICLIGHTCONDITION
_CONDITION.fields_by_name['object_next_to_adc_condition'].message_type = _OBJECTNEXTTOADCCONDITION
_CONDITION.fields_by_name['object_location_condition'].message_type = _OBJECTLOCATIONCONDITION
_CONDITION.fields_by_name['object_decision_condition'].message_type = _OBJECTDECISIONCONDITION
_CONDITION.fields_by_name['object_wave_condition'].message_type = _OBJECTWAVECONDITION
_CONDITION.fields_by_name['routing_condition'].message_type = _ROUTINGCONDITION
_CONDITION.fields_by_name['angle_with_heading_condition'].message_type = _ANGLEWITHHEADINGCONDITION
_CONDITION.fields_by_name['customized_empty_area_condition'].message_type = _CUSTOMIZEDEMPTYAREACONDITION
_CONDITION.fields_by_name['retrograde_condition'].message_type = _RETROGRADECONDITION
_CONDITION.fields_by_name['planning_condition'].message_type = _PLANNINGCONDITION
_CONDITION.fields_by_name['cross_line_condition'].message_type = _CROSSLINECONDITION
_CONDITION.fields_by_name['parking_pos_condition'].message_type = _PARKINGPOSCONDITION
_CONDITION.fields_by_name['drop_frame_condition'].message_type = _DROPFRAMECONDITION
_CONDITION.fields_by_name['turn_speed_limit_condition'].message_type = _TURNSPEEDLIMITCONDITION
_CONDITION.fields_by_name['change_lane_condition'].message_type = _CHANGELANECONDITION
_CONDITION.fields_by_name['on_road_condition'].message_type = _ONROADCONDITION
_CONDITION.fields_by_name['turn_light_condition'].message_type = _TURNLIGHTCONDITION
_CONDITION.fields_by_name['stop_limit_condition'].message_type = _STOPLIMITCONDITION
_CONDITION.fields_by_name['planning_topic_check_condition'].message_type = _PLANNINGTOPICCHECKCONDITION
_CONDITION.fields_by_name['prediction_line_shape_check_condition'].message_type = _PREDICTIONLINESHAPECHECKCONDITION
_CONDITION.fields_by_name['pass_through_condition'].message_type = _PASSTHROUGHCONDITION
_CONDITION.fields_by_name['crosswalk_stop_condition'].message_type = _CROSSWALKSTOPCONDITION
_CONDITION.fields_by_name['junction_decelerate_condition'].message_type = _JUNCTIONDECELERATECONDITION
_CONDITION.fields_by_name['adc_wave_condition'].message_type = _ADCWAVECONDITION
_CONDITION.fields_by_name['adc_drift_condition'].message_type = _ADCDRIFTCONDITION
_CONDITION.fields_by_name['planning_curvature_condition'].message_type = _PLANNINGCURVATURECONDITION
_CONDITION.fields_by_name['planning_collision_condition'].message_type = _PLANNINGCOLLISIONCONDITION
_CONDITION.fields_by_name['identify_nolight_condition'].message_type = _IDENTIFYNOLIGHTCONDITION
_CONDITION.fields_by_name['identify_slow_condition'].message_type = _IDENTIFYSLOWCONDITION
_CONDITION.fields_by_name['planning_outside_condition'].message_type = _PLANNINGOUTSIDECONDITION
_CONDITION.fields_by_name['drop_frame_monitor_condition'].message_type = _DROPFRAMEMONITORCONDITION
_CONDITION.fields_by_name['change_lane_fast_condition'].message_type = _CHANGELANEFASTCONDITION
_CONDITION.fields_by_name['jerk_condition'].message_type = _JERKCONDITION
_CONDITION.fields_by_name['yaw_condition'].message_type = _YAWCONDITION
_CONDITION.fields_by_name['yaw_rate_condition'].message_type = _YAWRATECONDITION
_CONDITION.fields_by_name['kappa_condition'].message_type = _KAPPACONDITION
_CONDITION.fields_by_name['dkappa_condition'].message_type = _DKAPPACONDITION
_CONDITION.fields_by_name['change_lane_double_condition'].message_type = _CHANGELANEDOUBLECONDITION
_CONDITION.fields_by_name['planning_core_condition'].message_type = _PLANNINGCORECONDITION
_CONDITION.fields_by_name['planning_stop_condition'].message_type = _PLANNINGSTOPCONDITION
_CONDITION.fields_by_name['straight_change_line_time_condition'].message_type = _STRAIGHTCHANGELINETIMECONDITION
_CONDITION.fields_by_name['change_lane_stop_condition'].message_type = _CHANGELANESTOPCONDITION
_CONDITION.fields_by_name['planning_ahead_condition'].message_type = _PLANNINGAHEADCONDITION
_CONDITION.fields_by_name['planning_slow_condition'].message_type = _PLANNINGSLOWCONDITION
_CONDITION.fields_by_name['planning_change_lane_at_junction_condition'].message_type = _PLANNINGCHANGELANEATJUNCTIONCONDITION
_CONDITION.fields_by_name['planning_custom_stop_condition'].message_type = _PLANNINGCUSTOMSTOPCONDITION
_CONDITION.fields_by_name['auto_invalid_planning_condition'].message_type = _AUTOINVALIDPLANNINGCONDITION
_CONDITION.fields_by_name['paint_dragon_condition'].message_type = _PAINTDRAGONCONDITION
_CONDITION.fields_by_name['planning_change_lane_on_solid_line_condition'].message_type = _PLANNINGCHANGELANEONSOLIDLINECONDITION
_CONDITION.fields_by_name['planning_road_shoulder_collision_condition'].message_type = _PLANNINGROADSHOULDERCOLLISIONCONDITION
_CONDITION.fields_by_name['turn_light_time_condition'].message_type = _TURNLIGHTTIMECONDITION
_CONDITION.fields_by_name['adc_central_deviation_condition'].message_type = _ADCCENTRALDEVIATIONCONDITION
_CONDITION.fields_by_name['identify_end_condition'].message_type = _IDENTIFYENDCONDITION
_CONDITION.fields_by_name['planning_adc_collision_condition'].message_type = _PLANNINGADCCOLLISIONCONDITION
_CONDITION.fields_by_name['cross_solid_line_condition'].message_type = _CROSSSOLIDLINECONDITION
_CONDITION.fields_by_name['adc_invalid_uturn_condition'].message_type = _ADCINVALIDUTURNCONDITION
_CONDITION.fields_by_name['car_deviate_central_condition'].message_type = _CARDEVIATECENTRALCONDITION
_CONDITION.fields_by_name['junction_connect_condition'].message_type = _JUNCTIONCONNECTCONDITION
_CONDITION.fields_by_name['compare_rosbag_condition'].message_type = _COMPAREROSBAGCONDITION
_CONDITION.fields_by_name['change_lane_normal_condition'].message_type = _CHANGELANENORMALCONDITION
_CONDITION.fields_by_name['heading_offset_condition'].message_type = _HEADINGOFFSETCONDITION
_CONDITION.fields_by_name['unknown_on_road_condition'].message_type = _UNKNOWNONROADCONDITION
_CONDITION.fields_by_name['pressure_yellow_line_condition'].message_type = _PRESSUREYELLOWLINECONDITION
_CONDITION.fields_by_name['planning_dis_diff_condition'].message_type = _PLANNINGDISDIFFCONDITION
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['logical_condition'])
_CONDITION.fields_by_name['logical_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['speed_condition'])
_CONDITION.fields_by_name['speed_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['object_overlap_condition'])
_CONDITION.fields_by_name['object_overlap_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['acceleration_condition'])
_CONDITION.fields_by_name['acceleration_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['region_overlap_condition'])
_CONDITION.fields_by_name['region_overlap_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['region_overlap_lw_condition'])
_CONDITION.fields_by_name['region_overlap_lw_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['run_red_light_condition'])
_CONDITION.fields_by_name['run_red_light_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['main_decision_condition'])
_CONDITION.fields_by_name['main_decision_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['line_segments_overlap_condition'])
_CONDITION.fields_by_name['line_segments_overlap_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['traffic_light_condition'])
_CONDITION.fields_by_name['traffic_light_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['object_next_to_adc_condition'])
_CONDITION.fields_by_name['object_next_to_adc_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['object_location_condition'])
_CONDITION.fields_by_name['object_location_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['object_decision_condition'])
_CONDITION.fields_by_name['object_decision_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['object_wave_condition'])
_CONDITION.fields_by_name['object_wave_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['routing_condition'])
_CONDITION.fields_by_name['routing_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['angle_with_heading_condition'])
_CONDITION.fields_by_name['angle_with_heading_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['customized_empty_area_condition'])
_CONDITION.fields_by_name['customized_empty_area_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['retrograde_condition'])
_CONDITION.fields_by_name['retrograde_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_condition'])
_CONDITION.fields_by_name['planning_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['cross_line_condition'])
_CONDITION.fields_by_name['cross_line_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['parking_pos_condition'])
_CONDITION.fields_by_name['parking_pos_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['drop_frame_condition'])
_CONDITION.fields_by_name['drop_frame_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['turn_speed_limit_condition'])
_CONDITION.fields_by_name['turn_speed_limit_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['change_lane_condition'])
_CONDITION.fields_by_name['change_lane_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['on_road_condition'])
_CONDITION.fields_by_name['on_road_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['turn_light_condition'])
_CONDITION.fields_by_name['turn_light_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['stop_limit_condition'])
_CONDITION.fields_by_name['stop_limit_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_topic_check_condition'])
_CONDITION.fields_by_name['planning_topic_check_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['prediction_line_shape_check_condition'])
_CONDITION.fields_by_name['prediction_line_shape_check_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['pass_through_condition'])
_CONDITION.fields_by_name['pass_through_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['crosswalk_stop_condition'])
_CONDITION.fields_by_name['crosswalk_stop_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['junction_decelerate_condition'])
_CONDITION.fields_by_name['junction_decelerate_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['adc_wave_condition'])
_CONDITION.fields_by_name['adc_wave_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['adc_drift_condition'])
_CONDITION.fields_by_name['adc_drift_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_curvature_condition'])
_CONDITION.fields_by_name['planning_curvature_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_collision_condition'])
_CONDITION.fields_by_name['planning_collision_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['identify_nolight_condition'])
_CONDITION.fields_by_name['identify_nolight_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['identify_slow_condition'])
_CONDITION.fields_by_name['identify_slow_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_outside_condition'])
_CONDITION.fields_by_name['planning_outside_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['drop_frame_monitor_condition'])
_CONDITION.fields_by_name['drop_frame_monitor_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['change_lane_fast_condition'])
_CONDITION.fields_by_name['change_lane_fast_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['jerk_condition'])
_CONDITION.fields_by_name['jerk_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['yaw_condition'])
_CONDITION.fields_by_name['yaw_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['yaw_rate_condition'])
_CONDITION.fields_by_name['yaw_rate_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['kappa_condition'])
_CONDITION.fields_by_name['kappa_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['dkappa_condition'])
_CONDITION.fields_by_name['dkappa_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['change_lane_double_condition'])
_CONDITION.fields_by_name['change_lane_double_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_core_condition'])
_CONDITION.fields_by_name['planning_core_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_stop_condition'])
_CONDITION.fields_by_name['planning_stop_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['straight_change_line_time_condition'])
_CONDITION.fields_by_name['straight_change_line_time_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['change_lane_stop_condition'])
_CONDITION.fields_by_name['change_lane_stop_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_ahead_condition'])
_CONDITION.fields_by_name['planning_ahead_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_slow_condition'])
_CONDITION.fields_by_name['planning_slow_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_change_lane_at_junction_condition'])
_CONDITION.fields_by_name['planning_change_lane_at_junction_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_custom_stop_condition'])
_CONDITION.fields_by_name['planning_custom_stop_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['auto_invalid_planning_condition'])
_CONDITION.fields_by_name['auto_invalid_planning_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['paint_dragon_condition'])
_CONDITION.fields_by_name['paint_dragon_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_change_lane_on_solid_line_condition'])
_CONDITION.fields_by_name['planning_change_lane_on_solid_line_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_road_shoulder_collision_condition'])
_CONDITION.fields_by_name['planning_road_shoulder_collision_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['turn_light_time_condition'])
_CONDITION.fields_by_name['turn_light_time_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['adc_central_deviation_condition'])
_CONDITION.fields_by_name['adc_central_deviation_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['identify_end_condition'])
_CONDITION.fields_by_name['identify_end_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_adc_collision_condition'])
_CONDITION.fields_by_name['planning_adc_collision_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['cross_solid_line_condition'])
_CONDITION.fields_by_name['cross_solid_line_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['adc_invalid_uturn_condition'])
_CONDITION.fields_by_name['adc_invalid_uturn_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['car_deviate_central_condition'])
_CONDITION.fields_by_name['car_deviate_central_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['junction_connect_condition'])
_CONDITION.fields_by_name['junction_connect_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['compare_rosbag_condition'])
_CONDITION.fields_by_name['compare_rosbag_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['change_lane_normal_condition'])
_CONDITION.fields_by_name['change_lane_normal_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['heading_offset_condition'])
_CONDITION.fields_by_name['heading_offset_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['unknown_on_road_condition'])
_CONDITION.fields_by_name['unknown_on_road_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['pressure_yellow_line_condition'])
_CONDITION.fields_by_name['pressure_yellow_line_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['planning_dis_diff_condition'])
_CONDITION.fields_by_name['planning_dis_diff_condition'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_LOGICALCONDITION.fields_by_name['operator_type'].enum_type = _LOGICALCONDITION_OPERATORTYPE
_LOGICALCONDITION.fields_by_name['sub_condition'].message_type = _CONDITION
_LOGICALCONDITION_OPERATORTYPE.containing_type = _LOGICALCONDITION
_OBJECTOVERLAPCONDITION.fields_by_name['direction'].enum_type = _OBJECTOVERLAPCONDITION_DIRECTIONTYPE
_OBJECTOVERLAPCONDITION_DIRECTIONTYPE.containing_type = _OBJECTOVERLAPCONDITION
_LINESEGMENTSOVERLAPCONDITION.fields_by_name['points'].message_type = common_geometry_pb2._POINTENU
_TRAFFICLIGHTCONDITION.fields_by_name['traffic_light'].message_type = traffic_light_detection_pb2._TRAFFICLIGHT
_MAINDECISIONCONDITION.fields_by_name['main_decision'].message_type = decision_pb2._MAINDECISION
_OBJECTNEXTTOADCCONDITION.fields_by_name['position'].enum_type = _OBJECTNEXTTOADCCONDITION_POSITIONTYPE
_OBJECTNEXTTOADCCONDITION_POSITIONTYPE.containing_type = _OBJECTNEXTTOADCCONDITION
_OBJECTLOCATIONCONDITION.fields_by_name['location'].message_type = common_geometry_pb2._POINTENU
_OBJECTDECISIONCONDITION.fields_by_name['object_decision'].message_type = decision_pb2._OBJECTDECISIONS
_ROUTINGCONDITION.fields_by_name['routing_res'].message_type = routing_pb2._ROUTINGRESULT
DESCRIPTOR.message_types_by_name['Condition'] = _CONDITION
DESCRIPTOR.message_types_by_name['PlanningCondition'] = _PLANNINGCONDITION
DESCRIPTOR.message_types_by_name['LogicalCondition'] = _LOGICALCONDITION
DESCRIPTOR.message_types_by_name['SpeedCondition'] = _SPEEDCONDITION
DESCRIPTOR.message_types_by_name['AccelerationCondition'] = _ACCELERATIONCONDITION
DESCRIPTOR.message_types_by_name['JerkCondition'] = _JERKCONDITION
DESCRIPTOR.message_types_by_name['YawCondition'] = _YAWCONDITION
DESCRIPTOR.message_types_by_name['YawRateCondition'] = _YAWRATECONDITION
DESCRIPTOR.message_types_by_name['KappaCondition'] = _KAPPACONDITION
DESCRIPTOR.message_types_by_name['DkappaCondition'] = _DKAPPACONDITION
DESCRIPTOR.message_types_by_name['ObjectOverlapCondition'] = _OBJECTOVERLAPCONDITION
DESCRIPTOR.message_types_by_name['RegionOverlapCondition'] = _REGIONOVERLAPCONDITION
DESCRIPTOR.message_types_by_name['LineSegmentsOverlapCondition'] = _LINESEGMENTSOVERLAPCONDITION
DESCRIPTOR.message_types_by_name['TrafficLightCondition'] = _TRAFFICLIGHTCONDITION
DESCRIPTOR.message_types_by_name['RegionOverlapLWCondition'] = _REGIONOVERLAPLWCONDITION
DESCRIPTOR.message_types_by_name['RunRedLight'] = _RUNREDLIGHT
DESCRIPTOR.message_types_by_name['MainDecisionCondition'] = _MAINDECISIONCONDITION
DESCRIPTOR.message_types_by_name['ObjectNextToADCCondition'] = _OBJECTNEXTTOADCCONDITION
DESCRIPTOR.message_types_by_name['ObjectLocationCondition'] = _OBJECTLOCATIONCONDITION
DESCRIPTOR.message_types_by_name['ObjectDecisionCondition'] = _OBJECTDECISIONCONDITION
DESCRIPTOR.message_types_by_name['ObjectWaveCondition'] = _OBJECTWAVECONDITION
DESCRIPTOR.message_types_by_name['RoutingCondition'] = _ROUTINGCONDITION
DESCRIPTOR.message_types_by_name['AngleWithHeadingCondition'] = _ANGLEWITHHEADINGCONDITION
DESCRIPTOR.message_types_by_name['CustomizedEmptyAreaCondition'] = _CUSTOMIZEDEMPTYAREACONDITION
DESCRIPTOR.message_types_by_name['RetrogradeCondition'] = _RETROGRADECONDITION
DESCRIPTOR.message_types_by_name['CrossLineCondition'] = _CROSSLINECONDITION
DESCRIPTOR.message_types_by_name['ParkingPosCondition'] = _PARKINGPOSCONDITION
DESCRIPTOR.message_types_by_name['DropFrameCondition'] = _DROPFRAMECONDITION
DESCRIPTOR.message_types_by_name['TurnSpeedLimitCondition'] = _TURNSPEEDLIMITCONDITION
DESCRIPTOR.message_types_by_name['ChangeLaneCondition'] = _CHANGELANECONDITION
DESCRIPTOR.message_types_by_name['OnRoadCondition'] = _ONROADCONDITION
DESCRIPTOR.message_types_by_name['PlanningOutsideCondition'] = _PLANNINGOUTSIDECONDITION
DESCRIPTOR.message_types_by_name['TurnLightCondition'] = _TURNLIGHTCONDITION
DESCRIPTOR.message_types_by_name['StopLimitCondition'] = _STOPLIMITCONDITION
DESCRIPTOR.message_types_by_name['PlanningTopicCheckCondition'] = _PLANNINGTOPICCHECKCONDITION
DESCRIPTOR.message_types_by_name['PredictionLineShapeCheckCondition'] = _PREDICTIONLINESHAPECHECKCONDITION
DESCRIPTOR.message_types_by_name['PassThroughCondition'] = _PASSTHROUGHCONDITION
DESCRIPTOR.message_types_by_name['CrosswalkStopCondition'] = _CROSSWALKSTOPCONDITION
DESCRIPTOR.message_types_by_name['JunctionDecelerateCondition'] = _JUNCTIONDECELERATECONDITION
DESCRIPTOR.message_types_by_name['AdcWaveCondition'] = _ADCWAVECONDITION
DESCRIPTOR.message_types_by_name['AdcDriftCondition'] = _ADCDRIFTCONDITION
DESCRIPTOR.message_types_by_name['PlanningCurvatureCondition'] = _PLANNINGCURVATURECONDITION
DESCRIPTOR.message_types_by_name['PlanningCollisionCondition'] = _PLANNINGCOLLISIONCONDITION
DESCRIPTOR.message_types_by_name['IdentifyNolightCondition'] = _IDENTIFYNOLIGHTCONDITION
DESCRIPTOR.message_types_by_name['IdentifySlowCondition'] = _IDENTIFYSLOWCONDITION
DESCRIPTOR.message_types_by_name['DropFrameMonitorCondition'] = _DROPFRAMEMONITORCONDITION
DESCRIPTOR.message_types_by_name['ChangeLaneFastCondition'] = _CHANGELANEFASTCONDITION
DESCRIPTOR.message_types_by_name['ChangeLaneDoubleCondition'] = _CHANGELANEDOUBLECONDITION
DESCRIPTOR.message_types_by_name['PlanningCoreCondition'] = _PLANNINGCORECONDITION
DESCRIPTOR.message_types_by_name['PlanningStopCondition'] = _PLANNINGSTOPCONDITION
DESCRIPTOR.message_types_by_name['StraightChangeLineTimeCondition'] = _STRAIGHTCHANGELINETIMECONDITION
DESCRIPTOR.message_types_by_name['ChangeLaneStopCondition'] = _CHANGELANESTOPCONDITION
DESCRIPTOR.message_types_by_name['PlanningAheadCondition'] = _PLANNINGAHEADCONDITION
DESCRIPTOR.message_types_by_name['PlanningSlowCondition'] = _PLANNINGSLOWCONDITION
DESCRIPTOR.message_types_by_name['PlanningChangeLaneAtJunctionCondition'] = _PLANNINGCHANGELANEATJUNCTIONCONDITION
DESCRIPTOR.message_types_by_name['PlanningCustomStopCondition'] = _PLANNINGCUSTOMSTOPCONDITION
DESCRIPTOR.message_types_by_name['AutoInvalidPlanningCondition'] = _AUTOINVALIDPLANNINGCONDITION
DESCRIPTOR.message_types_by_name['PaintDragonCondition'] = _PAINTDRAGONCONDITION
DESCRIPTOR.message_types_by_name['PlanningChangeLaneOnSolidLineCondition'] = _PLANNINGCHANGELANEONSOLIDLINECONDITION
DESCRIPTOR.message_types_by_name['PlanningRoadShoulderCollisionCondition'] = _PLANNINGROADSHOULDERCOLLISIONCONDITION
DESCRIPTOR.message_types_by_name['TurnLightTimeCondition'] = _TURNLIGHTTIMECONDITION
DESCRIPTOR.message_types_by_name['AdcCentralDeviationCondition'] = _ADCCENTRALDEVIATIONCONDITION
DESCRIPTOR.message_types_by_name['IdentifyEndCondition'] = _IDENTIFYENDCONDITION
DESCRIPTOR.message_types_by_name['PlanningAdcCollisionCondition'] = _PLANNINGADCCOLLISIONCONDITION
DESCRIPTOR.message_types_by_name['CrossSolidLineCondition'] = _CROSSSOLIDLINECONDITION
DESCRIPTOR.message_types_by_name['AdcInvalidUturnCondition'] = _ADCINVALIDUTURNCONDITION
DESCRIPTOR.message_types_by_name['CarDeviateCentralCondition'] = _CARDEVIATECENTRALCONDITION
DESCRIPTOR.message_types_by_name['JunctionConnectCondition'] = _JUNCTIONCONNECTCONDITION
DESCRIPTOR.message_types_by_name['CompareRosbagCondition'] = _COMPAREROSBAGCONDITION
DESCRIPTOR.message_types_by_name['ChangeLaneNormalCondition'] = _CHANGELANENORMALCONDITION
DESCRIPTOR.message_types_by_name['HeadingOffsetCondition'] = _HEADINGOFFSETCONDITION
DESCRIPTOR.message_types_by_name['UnknownOnRoadCondition'] = _UNKNOWNONROADCONDITION
DESCRIPTOR.message_types_by_name['PressureYellowLineCondition'] = _PRESSUREYELLOWLINECONDITION
DESCRIPTOR.message_types_by_name['PlanningDisDiffCondition'] = _PLANNINGDISDIFFCONDITION

Condition = _reflection.GeneratedProtocolMessageType('Condition', (_message.Message,), dict(
  DESCRIPTOR = _CONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.Condition)
  ))
_sym_db.RegisterMessage(Condition)

PlanningCondition = _reflection.GeneratedProtocolMessageType('PlanningCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningCondition)
  ))
_sym_db.RegisterMessage(PlanningCondition)

LogicalCondition = _reflection.GeneratedProtocolMessageType('LogicalCondition', (_message.Message,), dict(
  DESCRIPTOR = _LOGICALCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.LogicalCondition)
  ))
_sym_db.RegisterMessage(LogicalCondition)

SpeedCondition = _reflection.GeneratedProtocolMessageType('SpeedCondition', (_message.Message,), dict(
  DESCRIPTOR = _SPEEDCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.SpeedCondition)
  ))
_sym_db.RegisterMessage(SpeedCondition)

AccelerationCondition = _reflection.GeneratedProtocolMessageType('AccelerationCondition', (_message.Message,), dict(
  DESCRIPTOR = _ACCELERATIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AccelerationCondition)
  ))
_sym_db.RegisterMessage(AccelerationCondition)

JerkCondition = _reflection.GeneratedProtocolMessageType('JerkCondition', (_message.Message,), dict(
  DESCRIPTOR = _JERKCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.JerkCondition)
  ))
_sym_db.RegisterMessage(JerkCondition)

YawCondition = _reflection.GeneratedProtocolMessageType('YawCondition', (_message.Message,), dict(
  DESCRIPTOR = _YAWCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.YawCondition)
  ))
_sym_db.RegisterMessage(YawCondition)

YawRateCondition = _reflection.GeneratedProtocolMessageType('YawRateCondition', (_message.Message,), dict(
  DESCRIPTOR = _YAWRATECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.YawRateCondition)
  ))
_sym_db.RegisterMessage(YawRateCondition)

KappaCondition = _reflection.GeneratedProtocolMessageType('KappaCondition', (_message.Message,), dict(
  DESCRIPTOR = _KAPPACONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.KappaCondition)
  ))
_sym_db.RegisterMessage(KappaCondition)

DkappaCondition = _reflection.GeneratedProtocolMessageType('DkappaCondition', (_message.Message,), dict(
  DESCRIPTOR = _DKAPPACONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.DkappaCondition)
  ))
_sym_db.RegisterMessage(DkappaCondition)

ObjectOverlapCondition = _reflection.GeneratedProtocolMessageType('ObjectOverlapCondition', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTOVERLAPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ObjectOverlapCondition)
  ))
_sym_db.RegisterMessage(ObjectOverlapCondition)

RegionOverlapCondition = _reflection.GeneratedProtocolMessageType('RegionOverlapCondition', (_message.Message,), dict(
  DESCRIPTOR = _REGIONOVERLAPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.RegionOverlapCondition)
  ))
_sym_db.RegisterMessage(RegionOverlapCondition)

LineSegmentsOverlapCondition = _reflection.GeneratedProtocolMessageType('LineSegmentsOverlapCondition', (_message.Message,), dict(
  DESCRIPTOR = _LINESEGMENTSOVERLAPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.LineSegmentsOverlapCondition)
  ))
_sym_db.RegisterMessage(LineSegmentsOverlapCondition)

TrafficLightCondition = _reflection.GeneratedProtocolMessageType('TrafficLightCondition', (_message.Message,), dict(
  DESCRIPTOR = _TRAFFICLIGHTCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.TrafficLightCondition)
  ))
_sym_db.RegisterMessage(TrafficLightCondition)

RegionOverlapLWCondition = _reflection.GeneratedProtocolMessageType('RegionOverlapLWCondition', (_message.Message,), dict(
  DESCRIPTOR = _REGIONOVERLAPLWCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.RegionOverlapLWCondition)
  ))
_sym_db.RegisterMessage(RegionOverlapLWCondition)

RunRedLight = _reflection.GeneratedProtocolMessageType('RunRedLight', (_message.Message,), dict(
  DESCRIPTOR = _RUNREDLIGHT,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.RunRedLight)
  ))
_sym_db.RegisterMessage(RunRedLight)

MainDecisionCondition = _reflection.GeneratedProtocolMessageType('MainDecisionCondition', (_message.Message,), dict(
  DESCRIPTOR = _MAINDECISIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.MainDecisionCondition)
  ))
_sym_db.RegisterMessage(MainDecisionCondition)

ObjectNextToADCCondition = _reflection.GeneratedProtocolMessageType('ObjectNextToADCCondition', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTNEXTTOADCCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ObjectNextToADCCondition)
  ))
_sym_db.RegisterMessage(ObjectNextToADCCondition)

ObjectLocationCondition = _reflection.GeneratedProtocolMessageType('ObjectLocationCondition', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTLOCATIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ObjectLocationCondition)
  ))
_sym_db.RegisterMessage(ObjectLocationCondition)

ObjectDecisionCondition = _reflection.GeneratedProtocolMessageType('ObjectDecisionCondition', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTDECISIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ObjectDecisionCondition)
  ))
_sym_db.RegisterMessage(ObjectDecisionCondition)

ObjectWaveCondition = _reflection.GeneratedProtocolMessageType('ObjectWaveCondition', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTWAVECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ObjectWaveCondition)
  ))
_sym_db.RegisterMessage(ObjectWaveCondition)

RoutingCondition = _reflection.GeneratedProtocolMessageType('RoutingCondition', (_message.Message,), dict(
  DESCRIPTOR = _ROUTINGCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.RoutingCondition)
  ))
_sym_db.RegisterMessage(RoutingCondition)

AngleWithHeadingCondition = _reflection.GeneratedProtocolMessageType('AngleWithHeadingCondition', (_message.Message,), dict(
  DESCRIPTOR = _ANGLEWITHHEADINGCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AngleWithHeadingCondition)
  ))
_sym_db.RegisterMessage(AngleWithHeadingCondition)

CustomizedEmptyAreaCondition = _reflection.GeneratedProtocolMessageType('CustomizedEmptyAreaCondition', (_message.Message,), dict(
  DESCRIPTOR = _CUSTOMIZEDEMPTYAREACONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.CustomizedEmptyAreaCondition)
  ))
_sym_db.RegisterMessage(CustomizedEmptyAreaCondition)

RetrogradeCondition = _reflection.GeneratedProtocolMessageType('RetrogradeCondition', (_message.Message,), dict(
  DESCRIPTOR = _RETROGRADECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.RetrogradeCondition)
  ))
_sym_db.RegisterMessage(RetrogradeCondition)

CrossLineCondition = _reflection.GeneratedProtocolMessageType('CrossLineCondition', (_message.Message,), dict(
  DESCRIPTOR = _CROSSLINECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.CrossLineCondition)
  ))
_sym_db.RegisterMessage(CrossLineCondition)

ParkingPosCondition = _reflection.GeneratedProtocolMessageType('ParkingPosCondition', (_message.Message,), dict(
  DESCRIPTOR = _PARKINGPOSCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ParkingPosCondition)
  ))
_sym_db.RegisterMessage(ParkingPosCondition)

DropFrameCondition = _reflection.GeneratedProtocolMessageType('DropFrameCondition', (_message.Message,), dict(
  DESCRIPTOR = _DROPFRAMECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.DropFrameCondition)
  ))
_sym_db.RegisterMessage(DropFrameCondition)

TurnSpeedLimitCondition = _reflection.GeneratedProtocolMessageType('TurnSpeedLimitCondition', (_message.Message,), dict(
  DESCRIPTOR = _TURNSPEEDLIMITCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.TurnSpeedLimitCondition)
  ))
_sym_db.RegisterMessage(TurnSpeedLimitCondition)

ChangeLaneCondition = _reflection.GeneratedProtocolMessageType('ChangeLaneCondition', (_message.Message,), dict(
  DESCRIPTOR = _CHANGELANECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ChangeLaneCondition)
  ))
_sym_db.RegisterMessage(ChangeLaneCondition)

OnRoadCondition = _reflection.GeneratedProtocolMessageType('OnRoadCondition', (_message.Message,), dict(
  DESCRIPTOR = _ONROADCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.OnRoadCondition)
  ))
_sym_db.RegisterMessage(OnRoadCondition)

PlanningOutsideCondition = _reflection.GeneratedProtocolMessageType('PlanningOutsideCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGOUTSIDECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningOutsideCondition)
  ))
_sym_db.RegisterMessage(PlanningOutsideCondition)

TurnLightCondition = _reflection.GeneratedProtocolMessageType('TurnLightCondition', (_message.Message,), dict(
  DESCRIPTOR = _TURNLIGHTCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.TurnLightCondition)
  ))
_sym_db.RegisterMessage(TurnLightCondition)

StopLimitCondition = _reflection.GeneratedProtocolMessageType('StopLimitCondition', (_message.Message,), dict(
  DESCRIPTOR = _STOPLIMITCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.StopLimitCondition)
  ))
_sym_db.RegisterMessage(StopLimitCondition)

PlanningTopicCheckCondition = _reflection.GeneratedProtocolMessageType('PlanningTopicCheckCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGTOPICCHECKCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningTopicCheckCondition)
  ))
_sym_db.RegisterMessage(PlanningTopicCheckCondition)

PredictionLineShapeCheckCondition = _reflection.GeneratedProtocolMessageType('PredictionLineShapeCheckCondition', (_message.Message,), dict(
  DESCRIPTOR = _PREDICTIONLINESHAPECHECKCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PredictionLineShapeCheckCondition)
  ))
_sym_db.RegisterMessage(PredictionLineShapeCheckCondition)

PassThroughCondition = _reflection.GeneratedProtocolMessageType('PassThroughCondition', (_message.Message,), dict(
  DESCRIPTOR = _PASSTHROUGHCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PassThroughCondition)
  ))
_sym_db.RegisterMessage(PassThroughCondition)

CrosswalkStopCondition = _reflection.GeneratedProtocolMessageType('CrosswalkStopCondition', (_message.Message,), dict(
  DESCRIPTOR = _CROSSWALKSTOPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.CrosswalkStopCondition)
  ))
_sym_db.RegisterMessage(CrosswalkStopCondition)

JunctionDecelerateCondition = _reflection.GeneratedProtocolMessageType('JunctionDecelerateCondition', (_message.Message,), dict(
  DESCRIPTOR = _JUNCTIONDECELERATECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.JunctionDecelerateCondition)
  ))
_sym_db.RegisterMessage(JunctionDecelerateCondition)

AdcWaveCondition = _reflection.GeneratedProtocolMessageType('AdcWaveCondition', (_message.Message,), dict(
  DESCRIPTOR = _ADCWAVECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AdcWaveCondition)
  ))
_sym_db.RegisterMessage(AdcWaveCondition)

AdcDriftCondition = _reflection.GeneratedProtocolMessageType('AdcDriftCondition', (_message.Message,), dict(
  DESCRIPTOR = _ADCDRIFTCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AdcDriftCondition)
  ))
_sym_db.RegisterMessage(AdcDriftCondition)

PlanningCurvatureCondition = _reflection.GeneratedProtocolMessageType('PlanningCurvatureCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCURVATURECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningCurvatureCondition)
  ))
_sym_db.RegisterMessage(PlanningCurvatureCondition)

PlanningCollisionCondition = _reflection.GeneratedProtocolMessageType('PlanningCollisionCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCOLLISIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningCollisionCondition)
  ))
_sym_db.RegisterMessage(PlanningCollisionCondition)

IdentifyNolightCondition = _reflection.GeneratedProtocolMessageType('IdentifyNolightCondition', (_message.Message,), dict(
  DESCRIPTOR = _IDENTIFYNOLIGHTCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.IdentifyNolightCondition)
  ))
_sym_db.RegisterMessage(IdentifyNolightCondition)

IdentifySlowCondition = _reflection.GeneratedProtocolMessageType('IdentifySlowCondition', (_message.Message,), dict(
  DESCRIPTOR = _IDENTIFYSLOWCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.IdentifySlowCondition)
  ))
_sym_db.RegisterMessage(IdentifySlowCondition)

DropFrameMonitorCondition = _reflection.GeneratedProtocolMessageType('DropFrameMonitorCondition', (_message.Message,), dict(
  DESCRIPTOR = _DROPFRAMEMONITORCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.DropFrameMonitorCondition)
  ))
_sym_db.RegisterMessage(DropFrameMonitorCondition)

ChangeLaneFastCondition = _reflection.GeneratedProtocolMessageType('ChangeLaneFastCondition', (_message.Message,), dict(
  DESCRIPTOR = _CHANGELANEFASTCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ChangeLaneFastCondition)
  ))
_sym_db.RegisterMessage(ChangeLaneFastCondition)

ChangeLaneDoubleCondition = _reflection.GeneratedProtocolMessageType('ChangeLaneDoubleCondition', (_message.Message,), dict(
  DESCRIPTOR = _CHANGELANEDOUBLECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ChangeLaneDoubleCondition)
  ))
_sym_db.RegisterMessage(ChangeLaneDoubleCondition)

PlanningCoreCondition = _reflection.GeneratedProtocolMessageType('PlanningCoreCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCORECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningCoreCondition)
  ))
_sym_db.RegisterMessage(PlanningCoreCondition)

PlanningStopCondition = _reflection.GeneratedProtocolMessageType('PlanningStopCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGSTOPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningStopCondition)
  ))
_sym_db.RegisterMessage(PlanningStopCondition)

StraightChangeLineTimeCondition = _reflection.GeneratedProtocolMessageType('StraightChangeLineTimeCondition', (_message.Message,), dict(
  DESCRIPTOR = _STRAIGHTCHANGELINETIMECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.StraightChangeLineTimeCondition)
  ))
_sym_db.RegisterMessage(StraightChangeLineTimeCondition)

ChangeLaneStopCondition = _reflection.GeneratedProtocolMessageType('ChangeLaneStopCondition', (_message.Message,), dict(
  DESCRIPTOR = _CHANGELANESTOPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ChangeLaneStopCondition)
  ))
_sym_db.RegisterMessage(ChangeLaneStopCondition)

PlanningAheadCondition = _reflection.GeneratedProtocolMessageType('PlanningAheadCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGAHEADCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningAheadCondition)
  ))
_sym_db.RegisterMessage(PlanningAheadCondition)

PlanningSlowCondition = _reflection.GeneratedProtocolMessageType('PlanningSlowCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGSLOWCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningSlowCondition)
  ))
_sym_db.RegisterMessage(PlanningSlowCondition)

PlanningChangeLaneAtJunctionCondition = _reflection.GeneratedProtocolMessageType('PlanningChangeLaneAtJunctionCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCHANGELANEATJUNCTIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningChangeLaneAtJunctionCondition)
  ))
_sym_db.RegisterMessage(PlanningChangeLaneAtJunctionCondition)

PlanningCustomStopCondition = _reflection.GeneratedProtocolMessageType('PlanningCustomStopCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCUSTOMSTOPCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningCustomStopCondition)
  ))
_sym_db.RegisterMessage(PlanningCustomStopCondition)

AutoInvalidPlanningCondition = _reflection.GeneratedProtocolMessageType('AutoInvalidPlanningCondition', (_message.Message,), dict(
  DESCRIPTOR = _AUTOINVALIDPLANNINGCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AutoInvalidPlanningCondition)
  ))
_sym_db.RegisterMessage(AutoInvalidPlanningCondition)

PaintDragonCondition = _reflection.GeneratedProtocolMessageType('PaintDragonCondition', (_message.Message,), dict(
  DESCRIPTOR = _PAINTDRAGONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PaintDragonCondition)
  ))
_sym_db.RegisterMessage(PaintDragonCondition)

PlanningChangeLaneOnSolidLineCondition = _reflection.GeneratedProtocolMessageType('PlanningChangeLaneOnSolidLineCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGCHANGELANEONSOLIDLINECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningChangeLaneOnSolidLineCondition)
  ))
_sym_db.RegisterMessage(PlanningChangeLaneOnSolidLineCondition)

PlanningRoadShoulderCollisionCondition = _reflection.GeneratedProtocolMessageType('PlanningRoadShoulderCollisionCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGROADSHOULDERCOLLISIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningRoadShoulderCollisionCondition)
  ))
_sym_db.RegisterMessage(PlanningRoadShoulderCollisionCondition)

TurnLightTimeCondition = _reflection.GeneratedProtocolMessageType('TurnLightTimeCondition', (_message.Message,), dict(
  DESCRIPTOR = _TURNLIGHTTIMECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.TurnLightTimeCondition)
  ))
_sym_db.RegisterMessage(TurnLightTimeCondition)

AdcCentralDeviationCondition = _reflection.GeneratedProtocolMessageType('AdcCentralDeviationCondition', (_message.Message,), dict(
  DESCRIPTOR = _ADCCENTRALDEVIATIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AdcCentralDeviationCondition)
  ))
_sym_db.RegisterMessage(AdcCentralDeviationCondition)

IdentifyEndCondition = _reflection.GeneratedProtocolMessageType('IdentifyEndCondition', (_message.Message,), dict(
  DESCRIPTOR = _IDENTIFYENDCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.IdentifyEndCondition)
  ))
_sym_db.RegisterMessage(IdentifyEndCondition)

PlanningAdcCollisionCondition = _reflection.GeneratedProtocolMessageType('PlanningAdcCollisionCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGADCCOLLISIONCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningAdcCollisionCondition)
  ))
_sym_db.RegisterMessage(PlanningAdcCollisionCondition)

CrossSolidLineCondition = _reflection.GeneratedProtocolMessageType('CrossSolidLineCondition', (_message.Message,), dict(
  DESCRIPTOR = _CROSSSOLIDLINECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.CrossSolidLineCondition)
  ))
_sym_db.RegisterMessage(CrossSolidLineCondition)

AdcInvalidUturnCondition = _reflection.GeneratedProtocolMessageType('AdcInvalidUturnCondition', (_message.Message,), dict(
  DESCRIPTOR = _ADCINVALIDUTURNCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.AdcInvalidUturnCondition)
  ))
_sym_db.RegisterMessage(AdcInvalidUturnCondition)

CarDeviateCentralCondition = _reflection.GeneratedProtocolMessageType('CarDeviateCentralCondition', (_message.Message,), dict(
  DESCRIPTOR = _CARDEVIATECENTRALCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.CarDeviateCentralCondition)
  ))
_sym_db.RegisterMessage(CarDeviateCentralCondition)

JunctionConnectCondition = _reflection.GeneratedProtocolMessageType('JunctionConnectCondition', (_message.Message,), dict(
  DESCRIPTOR = _JUNCTIONCONNECTCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.JunctionConnectCondition)
  ))
_sym_db.RegisterMessage(JunctionConnectCondition)

CompareRosbagCondition = _reflection.GeneratedProtocolMessageType('CompareRosbagCondition', (_message.Message,), dict(
  DESCRIPTOR = _COMPAREROSBAGCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.CompareRosbagCondition)
  ))
_sym_db.RegisterMessage(CompareRosbagCondition)

ChangeLaneNormalCondition = _reflection.GeneratedProtocolMessageType('ChangeLaneNormalCondition', (_message.Message,), dict(
  DESCRIPTOR = _CHANGELANENORMALCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.ChangeLaneNormalCondition)
  ))
_sym_db.RegisterMessage(ChangeLaneNormalCondition)

HeadingOffsetCondition = _reflection.GeneratedProtocolMessageType('HeadingOffsetCondition', (_message.Message,), dict(
  DESCRIPTOR = _HEADINGOFFSETCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.HeadingOffsetCondition)
  ))
_sym_db.RegisterMessage(HeadingOffsetCondition)

UnknownOnRoadCondition = _reflection.GeneratedProtocolMessageType('UnknownOnRoadCondition', (_message.Message,), dict(
  DESCRIPTOR = _UNKNOWNONROADCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.UnknownOnRoadCondition)
  ))
_sym_db.RegisterMessage(UnknownOnRoadCondition)

PressureYellowLineCondition = _reflection.GeneratedProtocolMessageType('PressureYellowLineCondition', (_message.Message,), dict(
  DESCRIPTOR = _PRESSUREYELLOWLINECONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PressureYellowLineCondition)
  ))
_sym_db.RegisterMessage(PressureYellowLineCondition)

PlanningDisDiffCondition = _reflection.GeneratedProtocolMessageType('PlanningDisDiffCondition', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGDISDIFFCONDITION,
  __module__ = 'simulation_condition_pb2'
  # @@protoc_insertion_point(class_scope:adu.simulation.PlanningDisDiffCondition)
  ))
_sym_db.RegisterMessage(PlanningDisDiffCondition)


_REGIONOVERLAPCONDITION.fields_by_name['region_corner_xy'].has_options = True
_REGIONOVERLAPCONDITION.fields_by_name['region_corner_xy']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)
